%UUU#EOFkirim1.%UUU#EOFkirim1.txt%UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU]%UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU]%UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU]ZWdldCBsb2JvcnRpcyB0b3J0b3IuIE1hdXJpcyBldWlzbW9kIGVyYXQgZW5pbSwgdGluY2lkdW50IGJsYW5kaXQganVzdG8gbG9ib3J0aXMgbmVjLiBOdWxsYSBmYXVjaWJ1cyB0ZWxsdXMgZXQgZXggcHJldGl1bSwgbm9uIHRpbmNpZHVudCByaXN1cyBtYXR0aXMuIERvbmVjIHJ1dHJ1bSwgbnVuYyBpbiBwbGFjZXJhdCB1bGxhbWNvcnBlciwgYXJjdSBzYXBpZW4gdnVscHV0YXRlIG5lcXVlLCBzZWQgbHVjdHVzIGV4IGp1c3RvIGF0IHB1cnVzLiBWZXN0aWJ1bHVtIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzIG9yY2kgbHVjdHVzIGV0IHVsdHJpY2VzIHBvc3VlcmUgY3ViaWxpYSBjdXJhZTsgVXQganVzdG8gZmVsaXMsIHN1c2NpcGl0IHZpdGFlIHB1bHZpbmFyIGV0LCBhbGlxdWV0IGlkIG1ldHVzLiBWZXN0aWJ1bHVtIGZldWdpYXQgcXVhbSB1dCBsb3JlbSB1bGxhbWNvcnBlciBmaW5pYnVzLiBOdWxsYW0gc29kYWxlcyBzb2RhbGVzIGRvbG9yLCBuZWMgY29uZ3VlIG51bmMgcGxhY2VyYXQgdXQuIEFsaXF1YW0gZXUgdmVzdGlidWx1bSB0dXJwaXMuIFBlbGxlbnRlc3F1ZSBoYWJpdGFudCBtb3JiaSB0cmlzdGlxdWUgc2VuZWN0dXMgZXQgbmV0dXMgZXQgbWFsZXN1YWRhIGZhbWVzIGFjIHR1cnBpcyBlZ2VzdGFzLiBEb25lYyBsdWN0dXMsIGxlbyBhdWx0cmljaWVzIGFyY3UgcGxhY2VyYXQgZGlhbSBpbXBlcmRpZXQsIGEgdGluY2lkdW50IGxlY3R1cyBtb2xlc3RpZS4gQWxpcXVhbSBlZmZpY2l0dXIgZXN0IGFjIGxvYm9ydGlzIHBlbGxlbnRlc3F1ZS4gUGVsc3VhZGEgZmFtZXMgYWMgdHVycGlzIGVnZXN0YXMuIFBlbGxlbnRlc3F1ZSBub24gbmVxdWUgYW50ZS4gQ3JhcyBldCBncmF2aWRhIGZlbGlzLCB2aXRhZSBncmF2aWRhIGVyYXQuIERvbmVjIG9ybmFyZSBlcm9zZW1lbnR1bSBhIGZpbmlidXMgdmVsLCB1bHRyaWNlcyBzZWQgbWV0dXMuIFZpdmFtdXMgZmV1Z2lhdCBlcm9zIHNlZCBjdXJzdXMgbWF0dGlzLiBBZW5lYW4gcmhvbmN1cyB2aXRhZSBkaWFtIGF0IHZlbmVuYXRpcy4NCg0KRG9uZWMgYmliZW5kdW0gbW9sbGlzIHR1cnBpcywgc2VkIGNvbW1vZG8gbGliZXJvIHVsbGFtY29ycGVyIGFjLiBOdW5jIHNpdCBhbWV0IG1hdXJpcyBhdCBtZXR1cyBjb21tb2RvIHBsYWNlcmF0IGlkIHNpdCBhbWV0IHNlbS4gTWFlY2VuYXMgdnVscHV0YXRlIGltcGVyZGlldCBvcm5hcmUuIE51bGxhbSBmZWxpcyBsb3JlbSwgZGFwaWJ1cyB2ZWwgb3JjaSBzZWQsIHRpbmNpZHVudCBzZW1wZXIgZHVpLiBOYW0gaW4gZWxlbWVudHVtIGVsaXQuIFBoYXNlbGx1cyBsYW9yZWV0IGludGVyZHVtIG9yY2kuIER1aXMgYXVjdG9yIGF1Z3VlIHV0IGVyb3MgZXVpc21vZCwgbm9uIGZlcm1lbnR1bSBleCBtb2xsaXMuDQoNCkludGVnZXIgdml0YWUgZXJvcyB1dCBsaWJlcm8gZGlnbmlzc2ltIGZhY2lsaXNpcyBzZWQgc2VkIG1pLiBJbiBodCBqdXN0byBzY2VsZXJpc3F1ZS4gRG9uZWMgY29tbW9kbyBwdWx2aW5hciBvcmNpLCBxdWlzIGZhY2lsaXNpcyB0dXJwaXMgYWxpcXVldCB2aXRhZS4gVXQgZXUgdmFyaXVzIG1ldHVzLCBpbiBkaWN0dW0gcHVydXMuDQoNCkZ1c2NlIHVsbGFtY29ycGVyIGJsYW5kaXQgcG9ydHRpdG9yLiBNYWVjZW5hcyBtYXR0aXMgY29uc2VxdWF0IGFyY3UgaW4gbG9ib3J0aXMuIE1hZWNlbmFzIGEgdGluY2lkdW50IGVyYXQuIFV0IGV4IGVuaW0sIG9ybmFyZSBzZWQgcnV0cnVtIHNlZCwgYWNjdW1zYW4gZWdldCBsZWN0dXMuIE1hdXJpcyBzaXQgYW1ldCBzZW1wZXIgbmlzbCwgaW50ZXJkdW0gZnJpbmdpbGxhIG1hdXJpcy4gTW9yYmkgZWdldCBsYWN1cyBlcm9zLiBNYXVyaXMgYWMgbGFjdXMgaGVuZHJlcml0LCBmYWNpbGlzaXMgZXggYSwgb3JuYXJlIHF1YW0uIFByYWVzZW50IHBlbGxlbnRlc3F1ZSBlcmF0IGRvbG9yLCB2ZWwgaW50ZXJkdW0gcHVydXMgbG9ib3J0aXMgY3Vyc3VzLiBBZW5lYW4gYSBiaWJlbmR1bSBlcm9zLCBldCBlZ2VzdGFzIHZlbGl0LiBOYW0gZW5pbSBkb2xvciwgcHJldGl1bSB1dCBtYXVyaXMgbm9uLCBwcmV0aXVtIGxhb3JlZXQgbGFjdXMuIERvbmVjIG5lYyBuaWJoIG5lYyBkaWFtIHB1bHZpbmFyIGZhY2lsaXNpcy4NCg0KUGVsbGVudGVzcXVlIGFsaXF1YW0gdHVycGlzIHV0IGZldWdpYXQgbWF0dGlzLiBJbnRlZ2VyIG1vbGVzdGllIHB1cnVzIHV0IGZlcm1lbnR1bSBibGFuZGl0LiBDdXJhYml0dXIgdml2ZXJyYSByaG9uY3VzIG1heGltdXMuIE5hbSBhbGlxdWFtIGF0IHRlbGx1cyBldSBwaGFyZXRyYS4gUHJhZXNlbnQgdHVycGlzIHNhcGllbiwgc2NlbGVyaXNxdWUgbWFsZXN1YWRhIHNlbSBhLCBvcm5hcmUgY29udmFsbGlzIGFudGUuIFZlc3RpYnVsdW0gcGVsbGVvIG1vbGVzdGllIHRpbmNpZHVudCBhIHZlaGljdWxhIGxhY3VzLg0KDQpOdWxsYSB2dWxwdXRhdGUgdmVoaWN1bGEgYXJjdSwgZWdldCBsYW9yZWV0IG51bmMgcG9ydGEgZWdldC4gRHVpcyBjb25zZWN0ZXR1ciBncmF2aWRhIG9yY2kgdXQgcnV0cnVtLiBTZWQgbWF4aW11cyBtZXR1cyBkb2xvciwgaW4gdGluY2lkIFNlZCBjb21tb2RvIHNlZCBuaWJoIHNlZCBsYW9yZWV0LiBOdWxsYSB1dCBtYWxlc3VhZGEgbGlndWxhLiBJbiBtYWxlc3VhZGEgcHVsdmluYXIgcHVydXMgZXUgdGluY2lkdW50LiBFdGlhbSBmYWNpbGlzaXMgbGljaXR1ZGluIG9kaW8sIGlkIHRpbmNpZHVudCB0dXJwaXMuIFN1c3BlbmRpc3NlIHN1c2NpcGl0IG1hdHRpcyBhdWd1ZSwgaW4gcG9ydGEgcmlzdXMgbHVjdHVzIG5lYy4NCg0KSW4gbm9uIG1ldHVzIGlkIGxlY3R1cyBvcm5hcmUgbG9ib3J0aXMgcXVpcyBpbiBlbmltLiBBbGlxdWFtIGFjIGFjY3Vtc2FuIG1pLiBTdXNwZW5kaXNzZSBldCBhbGlxdWV0IGFyY3UuIFBlbGxlbnRlc3F1ZSBldSBsb3JlbSBuZWMgbWV0dXMgcG9ydGEgYXVjdG9yLiBOdWxsYSBmYWNpbGlzaS4gUXVpc3F1ZSB0b3J0b3IganVzdG8sIGJpYmVuZHVtIHBsYWNlcmF0IGRhcGlidXMgdmVzdGlidWx1bSwgY29uc2VxdWF0IGF0IGxlby4gQ3VyYWJpdHVyIGNvbnNlcXVhdCBhcmN1IHF1aXMgdGVsbHVzIHJob25jdXMsIGlkIGVsZWlmZW5kIGVsaXQgbWFsZXN1YWRhLiBOdWxsYSBsZW8gZHVpLCBwbGFjZXJhdCB2ZWwgbnVsbGEgZXQsIHBsYWNlcmF0IGdyYXZpZGEgYXJjdS4gVml2YW11cyBudWxsYSBsZW8sIHNvbGxpY2l0dWRpbiBldSB2b2x1dHBhdCBhYywgcHVsdmluYXIgdmVsIG1hZ25hLiBTZWQgbW9sZXN0aWUgZXVpc21vZCBvcmNpLCBpZCB1bHRyaWNlcyBudW5jLiBOdWxsYSBmYWNpbGlzaS4gTW9yYmkgZWdlc3RhcyBtaSBuZWMgZG9sb3IgcGhhcmV0cmEsIGRpY3R1bSBibGFuZGl0IHVybmEgZmVybWVudHVtLiBTdXNwZW5kaXNzZSBmYWNpbGlzaXMgZG9sb3IgZXQgbGVjdHVzIGZyaW5naWxsYSwgcXVpcyBwcmV0aXVtIGFudGUgYXVjdG9yLiBWZXN0aWJ1bHVtIGludGVyZHVtIG5lYyBsYWN1cyB1dCB2b2x1dHBhdC4gRnVzY2UgbWF4aW11cyBhdWN0b3IgbG9yZW0gdXQgbG9ib3J0aXMuIE1vcmJpIGNvbnNlY3RldHVyLCB2ZWxpdCBlZ2V0IGZpbmlidXMgcmhvbmN1cywgb2RpbyBkdWkgZmluaWJ1cyBuaXNpLCBzZWQgcGhhcmV0cmEgZHVpIGlwc3VtIG1heGltdXMgcXVhbS4NCg0KTWF1cmlzIHNlZCBubSB2aXRhZSBvcm5hcmUgZXQsIGludGVyZHVtIGV0IHVybmEuIFZlc3RpYnVsdW0gYXVjdG9yLCB0dXJwaXMgYXQgYWNjdW1zYW4gZWxlbWVudHVtLCBudWxsYSBhcmN1IG1vbGxpcyBxdWFtLCBub24gdGVtcHVzIG5pYmggZmVsaXMgbmVjIGxpZ3VsYS4gVml2YW11cyBuZWMgYWxpcXVldCBuZXF1ZS4gVml2YW11cyBjb25kaW1lbnR1bSBsaWd1bGEgZWdldCBlcmF0IGVnZXN0YXMgdm9sdXRwYXQuIEFsaXF1YW0gcGxhY2VyYXQgcHVsdmluYXIgdmVsaXQgbm9uIGxhY2luaWEuIEZ1c2NlIG5vbiB2YXJpdXMgbmlzaS4gRnVzY2Ugc2VkIHNhcGllbiBsb3JlbS4gRHVpcyBzb2xsaWNpdHVkaW4gZWxpdCBldSBpbXBlcmRpZXQgdml2ZXJyYS4gVXQgbm9uIHVsbGFtY29ycGVyIHRvcnRvci4gSW50ZWdlciBpbiBuaXNpIHF1aXMgZmVsaXMgaGVuZHJlcml0IGNvbW1vZG8uIERvbmVjIGFjY3Vtc2FuIGFjIGp1c3RvIHZpdGFlIGVnZXN0YXMuIEN1cmFiaXR1ciBub24gaW50ZXJkdW0gZHVpLg0KDQpOdW5jIHVsbGFtY29ycGVyIHJ1dHJ1bSBwdXJ1cyBwb3J0YSB0ZW1wdXMuIFByb2luIGluIHJpc3VzIGV0IG1hc3NhIGVmZmljaXR1ciBjb252YWxsaXMuIE1hZWNlbmFzIHZlc3RpYnVsdW0gdmVuZW5hdGlzIGVyb3MgYXQgcGVsbGVudGVzcXVlLiBTdXNwZW5kaXNzZSB2aXRhZSBqdXN0byBpbiBqdXN0byB2dWxwdXRhdGUgcmhvbmN1cy4gTWF1cmlzIG1heGltdXMgcXVhbSBldSBlcmF0IGRhcGlidXMgZmF1Y2lidXMuIER1aXMgYSBlcmF0IGVnZXQgZXN0IGFsaXF1YW0gbGFjaW5pYSBuZWMgZWdldCBzYXBpZW4uIFBlbGxlbnRlc3F1ZSBjb252YWxsaXMgbWFnbmEgdmVsIGVsZWlmZW5kIGFjY3Vtc2FuLiBNb3JiaSBpbXBlcmRpZXQsIG1pIHV0IHZlbmVuYXRpcyB2ZWhpY3VsYSwgZW5pbSBvcmNpIGVsZWlmZW5kIGRvbG9yLCBzaXQgYW1ldCBkaWduaXNzaW0gbnVuYyBkb2xvciBldCB0ZWxsdXMuIENsYXNzIGFwdGVudCB0YWNpdGkgc29jaW9zcXUgYWQgbGl0b3JhIHRvcnF1ZW50IHBlciBjb251YmlhIG5vc3RyYSwgcGVyIGluY2VwdG9zIGhpbWVuYWVvcy4gTW9yYmkgZXQgdXJuYSBwdXJ1cy4gVmVzdGlidWx1bSBjb25zZWN0ZXR1ciByaXN1cyB2aXRhZSBjb25zZXF1YXQgY29uc2VjdGV0dXIuIFNlZCBoZW5kcmVyaXQgb3JuYXJlIHNlbXBlci4gRG9uZWMgdml0YWUgZmVybWVudHVtIG1hZ25hLiBOdW5jIHNvbGxpY2l0dWRpbiwgbWFzc2EgYXQgb3JuYXJlIHJ1dHJ1bSwgaXBzdW0gb3JjaSBtb2xsaXMgZW5pbSwgdmVsIGZlcm1lbnR1bSB0dXJwaXMgb2RpbyBhIHRlbGx1cy4NCg0KTWFlY2VuYXMgbGFvcmVldCBsYWN1cyBtb2xsaXMgbmVxdWUgdmVzdGlidWx1bSBydXRydW0uIFZlc3RpYnVsdW0gbHVjdHVzIHNvbGxpY2l0dWRpbiBuaXNpIHNlZCBtYXhpbXVzLiBRdWlzcXVlIGxvYm9ydGlzIG1pIGFyY3UsIHNvbGxpY2l0dWRpbiB2ZXN0aWJ1bHVtIGF1Z3VlIGRhcGlidXMgaWQuIE51bGxhIGF1Y3RvciBhdCBlbGl0IGEgdHJpc3RpcXVlLiBEb25lYyBsdWN0dXMgcHJldGl1bSB0aW5jaWR1bnQuIE5hbSBzY2VsZXJpc3F1ZSBpbXBlcmRpZXQgbnVsbGEsIHV0IG1heGltdXMgZXJhdCBjb25zZXF1YXQgZWdldC4gVml2YW11cyBmZXJtZW50dW0gcXVpcyBsZW8gZXQgb3JuYXJlLiBOdWxsYW0gYWxpcXVhbSBldWlzbW9kIHBvcnRhLiBEdWlzIGNvbnNlY3RldHVyIG1pIHZpdGFlIG1pIGZhdWNpYnVzIHRyaXN0aXF1ZS4gSW50ZWdlciBuZWMgbWFnbmEgYWMgZW5pbSBsYW9yZWV0IGZhY2lsaXNpcy4gSW50ZXJkdW0gZXQgbWFsZXN1YWRhIGZhbWVzIGFjIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzLiBOdWxsYSBjb25zZXF1YXQsIGxhY3VzIHF1aXMgdmVzdGlidWx1bSB2aXZlcnJhLCBwdXJ1cyBleCBlZmZpY2l0dXIgcmlzdXMsIGV0IHB1bHZpbmFyIG5pc2wgdG9ydG9yIHV0IGxvcmVtLg0KDQpEdWlzIHV0IG9yY2kgYmxhbmRpdCBzZW0gbWF4aW11cyBwb3J0dGl0b3IgbmVjIG5vbiB1cm5hLiBJbnRlZ2VyIG1heGltdXMgc29sbGljaXR1ZGluIGVmZmljaXR1ci4gTnVsbGFtIG9ybmFyZSBuaWJoIHZpdGFlIGxpZ3VsYSBibGFuZGl0LCBldSBldWlzbW9kIGZlbGlzIHBvcnRhLiBOdW5jIGZhdWNpYnVzIGxhY3VzIGluIHJpc3VzIHJ1dHJ1bSwgZmVybWVudHVtIGJpYmVuZHVtIGVyb3MgdnVscHV0YXRlLiBRdWlzcXVlIGV1IGxhY3VzIHB1cnVzLiBGdXNjZSB0ZW1wdXMgY29uc2VjdGV0dXIgdGVtcG9yLiBRdWlzcXVlIGF0IHByZXRpdW0gdGVsbHVzLg0KDQpOdW5jIG9ybmFyZSBzZWQgcXVhbSB2ZWwgcG9ydHRpdG9yLiBTZWQgdWxsYW1jb3JwZXIgZGlnbmlzc2ltIGVnZXN0YXMuIE51bmMgdXQgYW50ZSBhdWN0b3IsIGVmZmljaXR1ciBlbGl0IHNlZCwgc2FnaXR0aXMgb2Rpby4gRHVpcyBpcHN1bSBsaWd1bGEsIHZvbHV0cGF0IG5vbiBwZWxsZW50ZXNxdWUgbmVjLCB2YXJpdXMgbmVjIGxpZ3VsYS4gU2VkIG1hdHRpcyBsb2JvcnRpcyBzYXBpZW4gZWdldCBkaWN0dW0uIEludGVnZXIgYXQgZWdlc3RhcyBtZXR1cy4gTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4NCg0KTnVuYyBxdWlzIGNvbnZhbGxpcyBlcmF0LiBNYXVyaXMgcHJldGl1bSBhbGlxdWV0IG1hc3NhIHNpdCBhbWV0IGZlcm1lbnR1bS4gUHJvaW4gZXUgc29sbGljaXR1ZGluIGRpYW0sIGlkIHRyaXN0aXF1ZSBqdXN0by4gUHJvaW4gdWxsYW1jb3JwZXIgaXBzdW0gc2VkIGV4IGhlbmRyZXJpdCwgc2l0IGFtZXQgcHJldGl1bSBhcmN1IG1hbGVzdWFkYS4gQWxpcXVhbSBoZW5kcmVyaXQgZXN0IHF1aXMgdHVycGlzIHRpbmNpZHVudCBtb2xlc3RpZS4gRG9uZWMgdGVtcG9yIGV4IHF1aXMgZXggZWxlaWZlbmQgZGljdHVtLiBRdWlzcXVlIHNpdCBhbWV0IGxlY3R1cyBpcHN1bS4NCg0KU3VzcGVuZGlzc2UgaW4gYXJjdSBudWxsYS4gVXQgZGlhbSByLCBuYXNjZXR1ciByaWRpY3VsdXMgbXVzLiBTZWQgcHJldGl1bSBlcm9zIG1hc3NhLiBBZW5lYW4gaW4gcHRlbnQgdGFjaXRpIHNvY2lvc3F1IGFkIGxpdG9yYSB0b3JxdWVudCBwZXIgY29udWJpYSBub3N0cmEsIHBlciBpbmNlcHRvcyBoaW1lbmFlb3MuIE1hdXJpcyB2ZWhpY3VsYSBlbGl0IHF1aXMganVzdG8gYmxhbmRpdCBncmF2aWRhLg0KDQpJbiBqdXN0byByaXN1cywgZmVybWVudHVtIGFjIHVsdHJpY2VzIGNvbmRpbWVudHVtLCB2ZWhpY3VsYSBldCBsaWd1bGEuIFZpdmFtdXMgYWxpcXVldCB1bGxhbWNvcnBlciBncmF2aWRhLiBBZW5lYW4gdmVuZW5hdGlzIGEgbnVsbGEgZXQgdGluY2lkdW50LiBTZWQgZXUgbWkgbGFjaW5pdCB1dCBsZWN0dXMgc2VkLCBlZ2VzdGFzIG9ybmFyZSBxdWFtLiBGdXNjZSB2aXRhZSBpbXBlcmRpZXQgbG9yZW0uDQoNCk51bGxhIHByZXRpdW0gdmVzdGlidWx1bSBhbnRlIHZlbCBpYWN1bGlzLiBOdWxsYSBhbGlxdWV0IHJpc3VzIGVnZXQgbWkgbW9sbGlzIHNvZGFsZXMuIFZpdmFtdXMgc2NlbGVyaXNxdWUgb2RpbyBtYXVyaXMsIGFjIHBoYXJldHJhIHF1YW0gbWFsZXN1YWRhIHNpdCBhbWV0LiBOdW5jIG1vbGVzdGllYXR0aXMsIGhlbmRyZXJpdCBuaWJoLiBDcmFzIHNpdCBhbWV0IGx1Y3R1cyBsZW8uIERvbmVjIHZlc3RpYnVsdW0gcGVsbGVudGVzcXVlIGRpZ25pc3NpbS4gQWVuZWFuIGlkIHRpbmNpZHVudCBqdXN0bywgdmVsIG9ybmFyZSBsYWN1cy4gQWVuZWFuIHJob25jdXMgbnVuYyBsZW8sIGV1IGZhY2lsaXNpcyBuaXNsIGVsZW1lbnR1bSB2aXRhZS4gSW50ZXJkdW0gZXQgbWFsZXN1YWRhIGZhbWVzIGFjIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzLiBNYXVyaXMgdmVsIGlhY3VsaXMgcXVhbS4gTWF1cmlzIGVnZXQgbG9ib3J0aXMgbG9yZW0uDQoNClByYWVzZW50IGVsZW1lbnR1bSBvZGlvIG5vbiBkaWFtIGxhY2luaWEgZmFjaWxpYWxsaXMgZWdldCBsb3JlbS4gU2VkIHZlbmVuYXRpcyBzb2xsaWNpdHVkaW4gcG9ydGEuIE1vcmJpIHRlbXB1cyBsb3JlbSBxdWFtLCBldSBhdWN0b3IgbGlndWxhIGZldWdpYXQgaWQuIFBlbGxlbnRlc3F1ZSBtb2xsaXMgbmVjIG51bmMgc2l0IGFtZXQgZGlnbmlzc2ltLiBJbnRlZ2VyIG51bmMgZXJhdCwgcGhhcmV0cmEgc2l0IGFtZXQgbWF4aW11cyB2ZWwsIGltcGVyZGlldCBydXRydW0gdXJuYS4gQ3VyYWJpdHVyIGxhY2luaWEgYXVjdG9yIG1hdXJpcyBlZ2V0IHRpbmNpZHVudC4gRG9uZWMgYXQgZW5pbSBsaWd1bGEuIE51bGxhIGN1cnN1cyBkYXBpYnVzIG51bGxhIHZlbCBncmF2aWRhLiBEdWlzIG5vbiBtYXVyaXMgbnVsbGEuIFNlZCBzb2xsaWNpdHVkaW4gbWFsZXN1YWRhIGVsZW1lbnR1bS4gRXRpYW0gZXUgdmVuZW5hdGlzIHVybmEuIFByYWVzZW50IGRhcGlidXMgYWxpcXVhbSBlZmZpY2l0dXIuDQoNClF1aXNxdWUgZmV1Z2lhdCBkaWFtIGV1IG1hbGVzdWFkYSB0ZW1wdXMuIERvbmVjIHF1aXMgdWxsYW1jb3JwZXIgZG9sb3IsIGluIGV1aXNtb2QgbWV0dXMuIER1aXMgdGluY2lkdW50IGVuaW0gdml0YWUgbW9sZXN0aWUgdGVtcHVzLiBNYWVjZW5hcyBjb252YWxsaXMgaWQgbmVxdWUgZ3JhdmlkYSBldWlzbW9kLiBDcmFzIGxpYmVybyBsZWN0dXMsIGVmZmljaXR1ciBldCB1bHRyaWNlcyBub24sIGdyYXZpZGEgcmhvbmN1cyBsb3JlbS4gVmVzdGlidWx1bSBhIG5lcXVlIHN1c2NpcGl0LCBwb3J0YSBhcmN1IHZlbCwgdWx0cmljaWVzIHRlbGx1cy4gQ3VyYWJpdHVyIHF1aXMgZG9sb3IgdGVtcG9yLCBzb2xsaWNpdHVkaW4gbGVjdHVzIGVmZmljaXR1ciwgdGVtcG9yIGxlY3R1cy4gTnVsbGFtIGN1cnN1cyBkaWN0dW0gb2Rpby4gRG9uZWMgaW4gcHVsdmluYXIganVzdG8sIGFjIGVsZWlmZW5kIGFudGUuIEZ1c2NlIHRyaXN0aXF1ZSBtYXhpbXVzIGR1aSBwb3N1ZXJlIGJpYmVuZHVtLiBWZXN0aWJ1bHVtIHNpdCBhbWV0IG51bmMgc2l0IGFtZXQgbmlzbCBkaWN0dW0gZnJpbmdpbGxhIGEsIGx1Y3R1cyBlZ2VzdGFzIGVyYXQuIE51bGxhbSBwcmV0aXVtIHZlbGl0IGFjIG51bGxhIHZhcml1cyBwZWxsZW50ZXNxdWUuIEN1cmFiaXR1ciB2ZWhpY3VsYSBsb3JlbSBmcmluZ2lsbGEgcXVhbSBkYXBpYnVzLCBlZ2V0IGVnZXN0YXMgcmlzdXMgdWxsYW1jb3JwZXIuIFZpdmFtdXMgcHVsdmluYXIgbWF0dGlzIGxhY3VzIGluIGJpYmVuZHVtLiBTdXNwZW5kaXNzZSBjb25zZWN0ZXR1ciwgZXggdml0YWUgdmVoaWN1bGEgcHVsdmluYXIsIGFyY3Ugb2RpbyBmZXVnaWF0IG51bmMsIGluIGNvbW1vZG8gbG9yZW0gYXVndWUgbm9uIHNhcGllbi4gVmVzdGlidWx1bSBzZW0gYXVndWUsIGRpZ25pc3NpbSBxdWlzIGp1c3RvIHF1aXMsIG1vbGVzdGllIGV1aXNtb2QgbGlndWxhLiBQcmFlc2VudCBzYWdpdHRpcyBleCB2ZWwgY29tbW9kbyBjb25zZXF1YXQuIE51bmMgdmVzdGlidWx1bSBuZWMgZW5pbSBlZ2V0IHBvcnR0aXRvci4NCg0KTWF1cmlzIHV0IGZlcm1lbnR1bSBsZWN0dXMuIE1hdXJpcyBtYXR0aXMgdHVycGlzIHJpc3VzLCB1dCBjb25kaW1lbnR1bSBsYWN1cyBwaGFyZXRyYSBhLiBGdXNjZSBsZWN0dXMgbWksIHByZXRpdW0gYXQgbWF4aW11cyBzZWQsIHBvc3VlcmUgcXVpcyBkb2xvci4gVXQgZWdldCBtYXVyaXMgZGljdHVtLCBlbGVpZmVuZCBlcmF0IGFjLCB0ZW1wdXMgYXJjdS4gQWxpcXVhbSBtYXNzYSBlbmltLCBzYWdpdHRpcyBzaXQgYW1ldCBtYXR0aXMgYWMsIGRpY3R1bSBpbiBzZW0uIE51bGxhIG1vbGxpcywgZXJvcyBub24gc2FnaXR0aXMgaGVuZHJlcml0LCB0b3J0b3IgZW5pbSBtb2xlc3RpZSBlcm9zLCBldSB0ZW1wdXMgb2RpbyBsaWd1bGEgbm9uIGxpYmVyby4gTWFlY2VuYXMgaWQgbG9yZW0gcmhvbmN1cywgdGluY2lkdW50IGxhY3VzIG5lYywgdWx0cmljZXMgaXBzdW0uDQoNCk1vcmJpIHZlc3RpYnVsdW0gc3VzY2lwaXQgZXJhdCwgZWdldCBzdXNjaXBpdCBlc3QgdnVscHV0YXRlIHZpdmVycmEuIENsYXNzIGFwdGVudCB0YWNpdGkgc29jaW9zcXUgYWQgbGl0b3JhIHRvcnF1ZW50IHBlciBjb251YmlhIG5vc3RyYSwgcGVyIGluY2VwdG9zIGhpbWVuYWVvcy4gQWVuZWFuIHBoYXJldHJhLCBuaWJoIGV0IHZvbHV0cGF0IHJ1dHJ1bSwgdGVsbHVzIG5pYmggZWxlaWZlbmQgYXVndWUsIHNpdCBhbWV0IG1hbGVzdWFkYSBlcmF0IGFudGUgbm9uIGxpYmVyby4gQ3VyYWJpdHVyIHJpc3VzIGR1aSwgdmVoaWN1bGEgc2VkIGxvYm9ydGlzIG5lYywgY29uZGltZW50dW0gdXQgZXJvcy4gVml2YW11cyBlbGVpZmVuZCBzaXQgYW1ldCBkdWkgYSB2YXJpdXMuIENyYXMgaWQgYWxpcXVhbSBuaXNsLiBVdCBpYWN1bGlzIHNlbSBlbGl0LCBhdCBkYXBpYnVzIGp1c3RvIHNhZ2l0dGlzIGFjLiBJbiBmaW5pYnVzIHRvcnRvciBzaXQgYW1ldCBwb3N1ZXJlIGdyYXZpZGEuIFZpdmFtdXMgZWdldCBlc3QgYXQgZW5pbSBtYWxlc3VhZGEgYmxhbmRpdC4gQWxpcXVhbSBzZW1wZXIgYmxhbmRpdCBlbmltLCB1dCBwb3J0dGl0b3IgbGVvIGN1cnN1cyBhYy4gTmFtIGp1c3RvIGxvcmVtLCBzYWdpdHRpcyBldCBhbnRlIHBlbGxlbnRlc3F1ZSwgdnVscHV0YXRlIG1heGltdXMgdHVycGlzLiBEb25lYyB2YXJpdXMgZWdlc3RhcyBzZW0sIGEgbW9sZXN0aWUgbmVxdWUgZWxlaWZlbmQgZXQuIEZ1c2NlIHF1aXMgc2VtIHNlbXBlciBlbmltIGRpY3R1bSBzb2xsaWNpdHVkaW4gcXVpcyBub24gbWF1cmlzLiBQcmFlc2VudCBkb2xvciBtYXNzYSwgY29tbW9kbyBldCBtYXVyaXMgcXVpcywgZXVpc21vZCBlZmZpY2l0dXIgcmlzdXMuDQoNCkluIGZpbmlidXMgbWFsZXN1YWRhIHR1cnBpcyBldCBlbGVpZmVuZC4gU2VkIG1hZ25hIGRpYW0sIHBsYWNlcmF0IGEgcG9ydGEgcXVpcywgY29udmFsbGlzIGluIHNhcGllbi4gTWF1cmlzIGFjIGVyb3MgYSBkb2xvciBhbGlxdWFtIHBvc3VlcmUgbmVjIGF0IGRvbG9yLiBNYWVjZW5hcyBvcm5hcmUgbWkgdml0YWUgdG9ydG9yIGJpYmVuZHVtIGF1Y3Rvci4gTmFtIGVnZXQgbGVvIHV0IG9kaW8gb3JuYXJlIGNvbmd1ZSBpZCB1dCB1cm5hLiBOdWxsYW0gdmVsIGFsaXF1YW0gbWFnbmEuIFN1c3BlbmRpc3NlIHBvdGVudGkuIE1hdXJpcyBzY2VsZXJpc3F1ZSB0ZW1wb3IgZWdlc3Rhcy4gTmFtIGlhY3VsaXMgc2l0IGFtZXQgbmliaCBhIGFjY3Vtc2FuLiBTdXNwZW5kaXNzZSBxdWlzIGxpZ3VsYSBvcmNpLiBTZWQgYWMgaW1wZXJkaWV0IGVyb3MsIG5vbiBwb3J0dGl0b3IgZWxpdC4gU3VzcGVuZGlzc2UgcG90ZW50aS4gSW4gbWkgYXJjdSwgcGVsbGVudGVzcXVlIGV1IGVzdCB2aXRhZSwgdWxsYW1jb3JwZXIgcHVsdmluYXIgZXN0LiBDcmFzIGxlY3R1cyBqdXN0bywgcG9ydHRpdG9yIG5vbiBvZGlvIGVnZXQsIGFsaXF1YW0gc29kYWxlcyBtYWduYS4gSW4gcG9zdWVyZSBoZW5kcmVyaXQgbGlndWxhIGlkIGx1Y3R1cy4NCg0KRHVpcyBzZW1wZXIgbmlzbCBlZ2V0IHBvcnR0aXRvciBmYWNpbGlzaXMuIFBlbGxlbnRlc3F1ZSBhdCBuaXNsIHF1aXMgZXN0IHZlbmVuYXRpcyBzY2VsZXJpc3F1ZSBldSBlZ2V0IGVyb3MuIEN1cmFiaXR1ciBtYWduYSByaXN1cywgY29tbW9kbyBpZCBpYWN1bGlzIG5lYywgYWNjdW1zYW4gdml0YWUgZG9sb3IuIE51bGxhIGNvbmRpbWVudHVtIGxlY3R1cyByaXN1cywgZXUgdnVscHV0YXRlIGxpYmVybyBlbGVtZW50dW0gdml2ZXJyYS4gUXVpc3F1ZSBhbGlxdWFtIGxhY3VzIHF1aXMgbGVjdHVzIGVsZWlmZW5kIHBsYWNlcmF0LiBEb25lYyBydXRydW0gYWMgdXJuYSBxdWlzIHVsbGFtY29ycGVyLiBTZWQgaW4gdWx0cmljZXMgYXJjdSwgdml0YWUgcGxhY2VyYXQgZGlhbS4NCg0KTWF1cmlzIHBoYXJldHJhIGxvcmVtIGFsaXF1ZXQsIHZhcml1cyBuZXF1ZSBhYywgdml2ZXJyYSBuZXF1ZS4gQ3JhcyBldSB2dWxwdXRhdGUgZWxpdCwgaW4gbHVjdHVzIG5lcXVlLiBEdWlzIHVsdHJpY2llcyBwZWxsZW50ZXNxdWUgbGFjdXMuIEludGVnZXIgcGVsbGVudGVzcXVlIGxvcmVtIHZlbGl0LiBWZXN0aWJ1bHVtIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzIG9yY2kgbHVjdHVzIGV0IHVsdHJpY2VzIHBvc3VlcmUgY3ViaWxpYSBjdXJhZTsgVmVzdGlidWx1bSBkaWduaXNzaW0gdWx0cmljZXMgbGFjdXMsIG5vbiBkaWduaXNzaW0gc2VtIGxhY2luaWEgYXQuIEFsaXF1YW0gZnJpbmdpbGxhLCBlcm9zIGV0IGFjY3Vtc2FuIG1hdHRpcywgbGVjdHVzIG5pc2wgdWxsYW1jb3JwZXIgc2FwaWVuLCBhdCBsdWN0dXMgbWV0dXMgbmliaCBuZWMgb3JjaS4gQWxpcXVhbSBmYWNpbGlzaXMsIGxhY3VzIGV0IHZlaGljdWxhIGFsaXF1YW0sIGxvcmVtIGRvbG9yIGNvbW1vZG8gb3JjaSwgZWdldCBlbGVtZW50dW0gbWFzc2EgbnVsbGEgbmVjIG9kaW8uIFF1aXNxdWUgZWdldCBlc3QgYWMgcHVydXMgYWNjdW1zYW4gbHVjdHVzLg0KDQpWaXZhbXVzIG51bmMgbGlndWxhLCBwcmV0aXVtIGV0IHRpbmNpZHVudCBub24sIHZ1bHB1dGF0ZSBuZWMgZXguIE9yY2kgdmFyaXVzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMsIG5hc2NldHVyIHJpZGljdWx1cyBtdXMuIFV0IG1ldHVzIHZlbGl0LCBwbGFjZXJhdCBzZWQgdHJpc3RpcXVlIHNlZCwgbGFjaW5pYSBub24gdG9ydG9yLiBOdW5jIGFsaXF1ZXQsIG1pIGV0IHN1c2NpcGl0IHRpbmNpZHVudCwgbGliZXJvIGxpYmVybyB1bGxhbWNvcnBlciBvZGlvLCBlZ2V0IHZvbHV0cGF0IG1ldHVzIHR1cnBpcyBldCBhcmN1LiBBbGlxdWFtIGVyYXQgdm9sdXRwYXQuIEV0aWFtIHZpdGFlIHNvZGFsZXMgbnVsbGEuIE1vcmJpIGNvbmd1ZSBmZWxpcyB2aXRhZSB2YXJpdXMgbW9sbGlzLiBEdWlzIHRlbXB1cyB2ZWxpdCBvZGlvLCBpZCBtYWxlc3VhZGEgbG9yZW0gaWFjdWxpcyBub24uIE51bmMgdGVtcG9yIGVsaXQgaW4gcHVydXMgZGlnbmlzc2ltLCBhdCByaG9uY3VzIHB1cnVzIHNvZGFsZXMuIFByYWVzZW50IHNlZCBmcmluZ2lsbGEgbnVsbGEsIHZpdGFlIHBvcnR0aXRvciBkb2xvci4gU2VkIGR1aSBxdWFtLCBzYWdpdHRpcyBhdCBsZWN0dXMgZXUsIHRlbXB1cyBzb2xsaWNpdHVkaW4gbGVjdHVzLiBBbGlxdWFtIGRhcGlidXMgbWkgZWxlbWVudHVtIHB1cnVzIGNvbmRpbWVudHVtIHRpbmNpZHVudC4gVXQgaW4gdmVsaXQgdHJpc3RpcXVlLCBmYWNpbGlzaXMgZXN0IHNlZCwgdmVoaWN1bGEgZXguIFZpdmFtdXMgYXVjdG9yIG51bmMgcXVpcyBmYWNpbGlzaXMgYWxpcXVhbS4NCg0KVmVzdGlidWx1bSBjb21tb2RvIGNvbnNlY3RldHVyIHB1cnVzIGF1Y3RvciB1bHRyaWNpZXMuIE1hZWNlbmFzIGNvbnZhbGxpcyB2YXJpdXMgYWxpcXVldC4gTWFlY2VuYXMgcmhvbmN1cyBydXRydW0gc2FwaWVuLCBxdWlzIHZlaGljdWxhIGxpZ3VsYS4gUXVpc3F1ZSBtb2xlc3RpZSBtaSBldCByaG9uY3VzIGNvbnNlY3RldHVyLiBNb3JiaSBmcmluZ2lsbGEgbmlzbCBvcmNpLCBhdCB2YXJpdXMgZHVpIHBvc3VlcmUgZXQuIEFsaXF1YW0gc2VtIGR1aSwgcmhvbmN1cyB2ZWwgbWkgZXQsIGRpZ25pc3NpbSBzYWdpdHRpcyBhdWd1ZS4gTnVsbGFtIHF1aXMgY29uZGltZW50dW0gYXVndWUuIEN1cmFiaXR1ciBldCBudW5jIG1hc3NhLiBJbiBzYXBpZW4gZXgsIHBoYXJldHJhIHZpdGFlIHJob25jdXMgZWdldCwgbW9sbGlzIGF0IGxlY3R1cy4gSW4gYSBhbnRlIHRlbXBvciwgbWF4aW11cyBlbGl0IGFjY3Vtc2FuLCB1bGxhbWNvcnBlciBuaXNsLiBOdWxsYSBjb25zZXF1YXQgbWV0dXMgZWdldCBlbGl0IGFsaXF1ZXQgY29uc2VxdWF0LiBOYW0gdmVsIGVmZmljaXR1ciBuaXNpLCBuZWMgY3Vyc3VzIGxpZ3VsYS4gQ3JhcyBpbXBlcmRpZXQgZXJhdCBsZW8sIHZvbHV0cGF0IGVmZmljaXR1ciBtYXNzYSBkYXBpYnVzIGEuIFByb2luIGVnZXN0YXMgcHVsdmluYXIgZWxlbWVudHVtLiBOdWxsYSBuZWMgZWxlbWVudHVtIG5pYmgsIG1vbGVzdGllIHZ1bHB1dGF0ZSB1cm5hLiBNYWVjZW5hcyBwcmV0aXVtIHVsdHJpY2llcyBtYXVyaXMsIGV0IHZhcml1cyBleCB0cmlzdGlxdWUgdGVtcHVzLg0KDQpVdCBwb3J0dGl0b3IgbnVuYyBhIHF1YW0gdmVoaWN1bGEgbWFsZXN1YWRhLiBTZWQgdmVsIGlhY3VsaXMgYXJjdS4gSW4gZWxlbWVudHVtLCBkdWkgcXVpcyBjdXJzdXMgb3JuYXJlLCBsZW8gYW50ZSBwdWx2aW5hciBtYXNzYSwgdXQgZmFjaWxpc2lzIGVuaW0gbGFjdXMgc2l0IGFtZXQgbGFjdXMuIER1aXMgbmVjIHVsdHJpY2VzIHNhcGllbiwgZWdldCBlbGVtZW50dW0gZmVsaXMuIFF1aXNxdWUgZmFjaWxpc2lzIG1vbGxpcyBlc3QsIGEgY29udmFsbGlzIG5pYmggY29uc2VjdGV0dXIgZXUuIFN1c3BlbmRpc3NlIHZlbCBuZXF1ZSBtYXVyaXMuIFNlZCB2ZWhpY3VsYSBlbmltIGV0IG9kaW8gdmVuZW5hdGlzLCB2ZWwgb3JuYXJlIGxpYmVybyBtYXhpbXVzLiBEb25lYyB2dWxwdXRhdGUgcHVydXMgaWQgdGVsbHVzIGFjY3Vtc2FuIHNjZWxlcmlzcXVlLiBDdXJhYml0dXIgc2l0IGFtZXQganVzdG8gdml0YWUgZWxpdCB2bGxhbSBpbiBlcmF0IHBoYXJldHJhIGVyYXQgbGFjaW5pYSB2b2x1dHBhdC4gUGVsbGVudGVzcXVlIHF1YW0gbnVuYywgc29sbGljaXR1ZGluIGlkIGVsZWlmZW5kIG5vbiwgZWxlbWVudHVtIHF1aXMgdXJuYS4gQ3VyYWJpdHVyIGdyYXZpZGEgdmVsaXQgdmVsaXQsIG1vbGxpcyBkaWduaXNzaW0gYXVndWUgbW9sbGlzIGEuIER1aXMgbmVxdWUgb2RpbywgZmFjaWxpc2lzIGV0IGxvYm9ydGlzIHF1aXMsIGlhY3VsaXMgbmVjIHRlbGx1cy4gTmFtIGV1IGZpbmlidXMgbG9yZW0uIE1hZWNlbmFzIGVnZXN0YXMgZHVpIGEgbmlzbCBsdWN0dXMsIGF0IG1vbGVzdGllIHB1cnVzIHVsdHJpY2VzLiBWaXZhbXVzIHRpbmNpZHVudCBuZWMgb2RpbyB1dCB0cmlzdGlxdWUuIFZlc3RpYnVsdW0gdXQgbGFjaW5pYSBxdWFtLiBWaXZhbXVzIHB1bHZpbmFyIHVsdHJpY2llcyBwZWxsZW50ZXNxdWUuIERvbmVjIGV1aXNtb2QgaGVuZHJlcml0IG1hbGVzdWFkYS4gRG9uZWMgZmluaWJ1cyB2aXZlcnJhIHB1cnVzIHV0IHVsdHJpY2VzLiBOdWxsYW0gdWx0cmljaWVzIGRpY3R1bSBzZW0gaW4gZWdlc3Rhcy4NCg0KTnVsbGFtIGlkIGVzdCBlZ2V0IG51bmMgbW9sbGlzIHVsbGFtY29ycGVyLiBTZWQgbmVxdWUgbWV0dXMsIHVsdHJpY2VzIG5vbiBwdXJ1cyBlZ2V0LCBzdXNjaXBpdCBjb252YWxsaXMgbmlzaS4gTWFlY2VuYXMgYXJjdSB0ZWxsdXMsIGZhdWNpYnVzIHF1aXMgbGFjaW5pYSBzaXQgYW1ldCwgbW9sbGlzIGFjIGxlY3R1cy4gTWFlY2VuYXMgcHJldGl1bSBtYXVyaXMgcXVpcyBsZWN0dXMgY29uc2VxdWF0LCBzZW1wZXIgZmFjaWxpc2lzIG1ldHVzIGFsaXF1YW0uIFN1c3BlbmRpc3NlIGJpYmVuZHVtIHN1c2NpcGl0IHNjZWxlcmlzcXVlLiBFdGlhbSBldSBleCB2YXJpdXMsIG9ybmFyZSBzZW0gaWQsIHVsdHJpY2VzIG9kaW8uIEV0aWFtIHZlc3RpYnVsdW0sIG1hdXJpcyBpbiBsb2JvcnRpcyBhbGlxdWV0LCBsZWN0dXMgZmVsaXMgcnV0cnVtIGRvbG9yLCBhdCBzZW1wZXIgbmliaCBleCBuZWMgZmVsaXMuIER1aXMgc29kYWxlcyBpcHN1bSBpZCB2aXZlcnJhIGNvbnNlcXVhdC4gU3VzcGVuZGlzc2UgYWNjdW1zYW4gdXJuYSBsaWd1bGEsIHZlbCB0ZW1wb3IgbWFnbmEgdmVuZW5hdGlzIGV0LiBNYXVyaXMgZWdldCBzY2VsZXJpc3F1ZSBqdXN0by4gQWVuZWFuIGFjY3Vtc2FuIHVsbGFtY29ycGVyIHVybmEgdml0YWUgZmFjaWxpc2lzLiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBQcm9pbiBsYWNpbmlhIG1ldHVzIHRvcnRvciwgdmVsIG1vbGxpcyBlbGl0IGNvbnNlY3RldHVyIHF1aXMuIFBoYXNlbGx1cyB2ZWxpdCBkb2xvciwgZXVpc21vZCBlZ2V0IHBsYWNlcmF0IGV1LCBtb2xsaXMgdmVsIHNhcGllbi4NCg0KVXQgcnV0cnVtIGR1aSBlbGl0LCB1dCBmYWNpbGlzaXMganVzdG8gdm9sdXRwYXQgcXVpcy4gVmVzdGlidWx1bSBpZCBsYWNpbmlhIG1ldHVzLiBEb25lYyBxdWlzIHNlbSBqdXN0by4gTnVsbGFtIGxhb3JlZXQgbmlzaSBpbiBtZXR1cyBkYXBpYnVzLCBldSB2b2x1dHBhdCBlbGl0IGNvbnZhbGxpcy4gUHJhZXNlbnQgZXUgdml2ZXJyYSBlbmltLiBGdXNjZSBydXRydW0sIGRpYW0gZXUgZmFjaWxpc2lzIHRyaXN0aXF1ZSwgdXJuYSBhbnRlIHRpbmNpZHVudCBsb3JlbSwgYSBsb2JvcnRpcyBlbGl0IGVyYXQgaWQgbG9yZW0uIFZlc3RpYnVsdW0gYWMgbnVsbGEgc2VkIGFyY3UgdmVoaWN1bGEgdWxsYW1jb3JwZXIuIFNlZCB1dCB1bHRyaWNlcyBtYXVyaXMuIFBlbGxlbnRlc3F1ZSBhYyBsZWN0dXMgZWdldCBsb3JlbSBhbGlxdWFtIGVmZmljaXR1ci4gTmFtIG5vbiBvZGlvIGF0IGVzdCB2dWxwdXRhdGUgdWx0cmljZXMuDQoNClZlc3RpYnVsdW0gdm9sdXRwYXQgcXVhbSByaG9uY3VzIHRlbXB1cyBpbXBlcmRpZXQuIE51bmMgYXVjdG9yIGxlY3R1cyBzaXQgYW1ldCBzY2VsZXJpc3F1ZSBsYWNpbmlhLiBJbiBmaW5pYnVzIG1hZ25hIGV0IHZvbHV0cGF0IGNvbnZhbGxpcy4gRHVpcyBlbGl0IGR1aSwgYWxpcXVhbSBzZWQgbG9yZW0gdml0YWUsIGRhcGlidXMgZGFwaWJ1cyBzZW0uIFByYWVzZW50IHRvcnRvciB0dXJwaXMsIHNlbXBlciB1dCBjb25ndWUgc2VkLCB2ZW5lbmF0aXMgdXQgbnVuYy4gTWF1cmlzIGVsZWlmZW5kIHR1cnBpcyB2ZWxpdCwgc2l0IGFtZXQgZGljdHVtIG1pIGhlbmRyZXJpdCB1dC4gUGVsbGVudGVzcXVlIGhhYml0YW50IG1vcmJpIHRyaXN0aXF1ZSBzZW5lY3R1cyBldCBuZXR1cyBldCBtYWxlc3VhZGEgZmFtZXMgYWMgdHVycGlzIGVnZXN0YXMuIERvbmVjIHRpbmNpZHVudCBsZWN0dXMgbm9uIHRyaXN0aXF1ZSB2ZW5lbmF0aXMuIFNlZCB0ZW1wb3IgaWQgbGVvIHNlZCBjb25ndWUuIFNlZCBlbmltIGZlbGlzLCBlZ2VzdGFzIHF1aXMgbWkgbGFjaW5pYSwgYmxhbmRpdCBlbGVpZmVuZCBqdXN0by4gVml2YW11cyBsdWN0dXMgc2VtIG1hbGVzdWFkYSBwdWx2aW5hciBmcmluZ2lsbGEuIEluIG51bGxhIG5lcXVlLCBmZXVnaWF0IHZlbCBkaWN0dW0gYSwgZWxlbWVudHVtIHNlZCBpcHN1bS4NCg0KQWxpcXVhbSBlcmF0IHZvbHV0cGF0LiBJbnRlZ2VyIG5lYyBtYWduYSB1bGxhbWNvcnBlciwgdGluY2lkdW50IGFudGUgc2l0IGFtZXQsIGF1Y3RvciBuaWJoLiBQcmFlc2VudCBwb3J0YSBzYXBpZW4gYWNjdW1zYW4ganVzdG8gdGVtcHVzLCBlZ2V0IGZldWdpYXQgYW50ZSBjb252YWxsaXMuIER1aXMgcG9zdWVyZSBjb25kaW1lbnR1bSBmZXJtZW50dW0uIE51bGxhIGZhY2lsaXNpLiBOdWxsYW0gdHVycGlzIG5pc2wsIHBvc3VlcmUgZXUgcXVhbSBldSwgbWF0dGlzIHRpbmNpZHVudCBuaXNsLiBDcmFzIGV0IHNhcGllbiBpZCBvZGlvIHNvZGFsZXMgbGFvcmVldCBuZWMgcXVpcyBzZW0uDQoNCkV0aWFtIG5vbiBvcmNpIHNpdCBhbWV0IGxpYmVybyBwb3N1ZXJlIHJob25jdXMgdmVsIGV1IGlwc3VtdGV0dXIuIFNlZCBncmF2aWRhIHJpc3VzIHZlbCBlc3QgZXVpc21vZCwgdmVsIHNvZGFsZXMgbnVsbGEgYmxhbmRpdC4gQWVuZWFuIG5vbiBvcm5hcmUgdXJuYSwgYWMgY29uZGltZW50dW0gZmVsaXMuIEV0aWFtIGRpY3R1bSBpcHN1bSBldCBuaXNsIGVsZWlmZW5kIGVsZW1lbnR1bS4gRHVpcyBzaXQgYW1ldCB0aW5jaWR1bnQgdXJuYSwgZWdldCBkYXBpYnVzIG1hZ25hLiBWaXZhbXVzIHVsbGFtY29ycGVyIGZlbGlzIHZpdGFlIG5pc2kgZWdlc3RhcywgYXQgZmFjaWxpc2lzIG5pc2kgdGVtcHVzLiBQaGFzZWxsdXMgZXUgZGlhbSB2aXRhZSBhdWd1ZSB1bHRyaWNlcyBwb3J0dGl0b3IuDQoNCkludGVnZXIgYXQgdHJpc3RpcXVlIGFudGUsIHZpdGFlIGFjY3Vtc2FuIG1pLiBBbGlxdWFtIGludGVyZHVtIGFsaXF1ZXQgYmliZW5kdW0uIFBoYXNlbGx1cyB2ZWwgc2VtcGVyIGxpZ3VsYSwgYSB1bHRyaWNlcyB1cm5hLiBTZWQgcHJldGl1bSBtYXVyaXMgdXQgbGlndWxhIGRhcGlidXMsIGFjIGNvbnZhbGxpcyB0dXJwaXMgbWF4aW11cy4gUHJvaW4gc2FnaXMuIE51bGxhbSB0aW5jaWR1bnQgZWxlbWVudHVtIHRlbGx1cywgZXQgaW1wZXJkaWV0IG5lcXVlIGhlbmRyZXJpdCBpbi4gSW50ZWdlciBzaXQgYW1ldCBuaWJoIGVuaW0uDQoNCk1vcmJpIGNvbmd1ZSBqdXN0byBldSB1cm5hIGNvbmRpbWVudHVtLCB2aXRhZSBzdXNjaXBpdCB0dXJwaXMgdGVtcG9yLiBOdWxsYSBjb252YWxsaXMgY29uc2VjdGV0dXIgbmlzbCBpZCBkYXBpYnVzLiBDcmFzIGZpbmlidXMgdmVuZW5hdGlzIGVyYXQsIGEgc2FnaXR0aXMgbGVvIGNvbnNlcXVhdCBlZ2V0LiBNb3JiaSB2aXZlcnJhIHZlaGljdWxhIHZlbGl0LCBhYyBzdXNjaXBpdCByaXN1cyBzYWdpdHRpcyB1dC4gQ3JhcyBldCBlbGl0IGF0IGVyb3MgY3Vyc3VzIHZlbmVuYXRpcy4gTnVsbGFtIGxpZ3VsYSBwdXJ1cywgYmxhbmRpdCBzaXQgYW1ldCBibGFuZGl0IGluLCBwbGFjZXJhdCBhdCB0b3J0b3IuIE1hdXJpcyBjdXJzdXMgYXQgdmVsaXQgYSBwbGFjZXJhdC4gUHJhZXNlbnQgYSBldWlzbW9kIGVyYXQsIGEgbWFsZXN1YWRhIHF1YW0uIE51bmMgdml0YWUgbnVsbGEgZXN0LiBOdWxsYSBmYWNpbGlzaS4gSW4gaGFjIGhhYml0YXNzZSBwbGF0ZWEgZGljdHVtc3QuIE51bGxhIGV1IHN1c2NpcGl0IHNhcGllbiwgbm9uIHN1c2NpcGl0IHVybmEuIFN1c3BlbmRpc3NlIHNlZCBjb25zZXF1YXQgbGlndWxhLiBVdCBub24gY29uc2VxdWF0IGxvcmVtLCBuZWMgYWxpcXVldCBvcmNpLiBQZWxsZW50ZXNxdWUgY29tbW9kbyBpcHN1bSBpZCBtaSBtYXhpbXVzLCBpZCBzb2xsaWNpdHVkaW4gZW5pbSBzdXNjaXBpdC4gTmFtIGVnZXQgdHVycGlzIGF0IG1pIHBvcnRhIHB1bHZpbmFyLg0KDQpDdXJhYml0dXIgZWdldCBuaWJoIHRpbmNpZHVudCwgdnVscHV0YXRlIG5lcXVlIGV1LCB2ZXN0aWJ1bHVtIHB1cnVzIG5pYmggaXBzdW0gZGFwaWJ1cyBlbGl0LCBldCBjb252YWxsaXMgYXVndWUgcHVydXMgZXQgYXJjdS4gTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gT3JjaSB2YXJpdXMgbmF0b3F1ZSBwZW5hdGlidXMgZXQgbWFnbmlzIGRpcyBwYXJ0dXJpZW50IG1vbnRlcywgbmFzY2V0dXIgcmlkaWN1bHVzIG11cy4gQ3JhcyBkaWFtIGR1aSwgdGVtcHVzIGVnZXQgZG9sb3Igbm9uLCB0aW5jaWR1bnQgcGhhcmV0cmEgZXJvcy4gUXVpc3F1ZSBhdCBoZW5kcmVyaXQgYW50ZSwgZWdldCBmYWNpbGlzaXMgaXBzdW0uIFV0IHZlc3RpYnVsdW0gZXN0IHNlZCBmZWxpcyBvcm5hcmUgcGxhY2VyYXQuaWN0dW1zdC4gTW9yYmkgaWQgdmVuZW5hdGlzIHRvcnRvciwgaWQgbGFvcmVldCBxdWFtLiBGdXNjZSB2aXRhZSBjb25zZXF1YXQgdmVsaXQuIFV0IHV0IHJob25jdXMgZmVsaXMuDQoNCkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIEFsaXF1YW0gYSBuaWJoIGdyYXZpZGEgbWF1cmlzIHVsbGFtY29ycGVyIGVsZW1lbnR1bS4gSW4gcG9ydGEgZmVsaXMgZ3JhdmlkYSwgZGFwaWJ1cyBsYWN1cyBpbiwgdnVscHV0YXRlIGZlbGlzLiBJbnRlZ2VyIGV1IGNvbW1vZG8gbmlzaS4gSW4gc29sbGljaXR1ZGluIGVmZmljaXR1ciBvZGlvIGFjIHRyaXN0aXF1ZS4gRHVpcyBlbGVtZW50dW0gY29uZ3VlIGxlby4gU3VzcGVuZGlzc2UgZXUgZHVpIGF0IGR1aSBjb25kaW1lbnR1bSBwb3J0dGl0b3IuIER1aXMgcGhhcmV0cmEgbW9sZXN0aWUgZXVpc21vZC4gQ3VyYWJpdHVyIHNpdCBhbWV0IG9yY2kgdXQgZXggdWxsYW1jb3JwZXIgZGFwaWJ1cy4gVml2YW11cyBjb252YWxsaXMgZXQgbmVxdWUgdXQgbW9sZXN0aWUuIFV0IHJpc3VzIGxvcmVtLCBpbnRlcmR1bSB0aW5jaWR1bnQgdHVycGlzIGluLCBjb25kaW1lbnR1eGltdXMgbmlzaSBzdXNjaXBpdC4gVmVzdGlidWx1bSBzb2xsaWNpdHVkaW4gc2NlbGVyaXNxdWUgbG9yZW0gc2VtcGVyIGRhcGlidXMuIEN1cmFiaXR1ciB2ZWxpdCBkaWFtLCBwb3J0YSBldSB2ZWxpdCBlZ2V0LCBjb252YWxsaXMgYWxpcXVhbSBzYXBpZW4uDQoNCkZ1c2NlIHNvbGxpY2l0dWRpbiBvZGlvIHNlZCBjb25ndWUgZmVybWVudHVtLiBNYXVyaXMgcHVsdmluYXIgcGVsbGVudGVzcXVlIHJpc3VzLCBuZWMgZXVpc21vZCBkaWFtIGxhY2luaWEgbm9uLiBDcmFzIHBvc3VlcmUgcHVydXMgZWdldCBjb25kaW1lbnR1bSBzbiB0dXJwaXMuIE51bmMgYmliZW5kdW0gZGljdHVtIGxlbywgcXVpcyB1bGxhbWNvcnBlciBtYXNzYS4gSW50ZWdlciBzZWQgZXggdXQgbmVxdWUgc2VtcGVyIHRlbXB1cyBzZWQgYSBpcHN1bS4gTW9yYmkgc2l0IGFtZXQgYXJjdSBkaWN0dW0sIHBvcnRhIHB1cnVzIGV0LCByaG9uY3VzIGFyY3UuIE51bGxhbSBhY2N1dW0gaW50ZXJkdW0sIGxvcmVtIHNhcGllbiBwZWxsZW50ZXNxdWUgYW50ZSwgYXQgdHJpc3RpcXVlIG1pIGRpYW0gZXQgZXguDQoNCk5hbSB0aW5jaWR1bnQgZGljdHVtIGFjY3Vtc2FuLiBQcmFlc2VudCBzb2xsaWNpdHVkaW4gc29kYWxlcyBkb2xvciwgc2l0IGFtZXQgcGhhcmV0cmEgYXJjdSBzY2VsZXJpc3F1ZSBhLiBTdXNwZW5kaXNzZSBwb3RlbnRpLiBWZXN0aWJ1bHVtIGlkIGVyb3Mgdml2ZXJyYSBudWxsYSBhdWN0b3IgYXVjdG9yLiBOYW0gbWkgbmVxdWUsIHNvZGFsZXMgZXQgdGluY2lkdW50IHV0LCBsYWNpbmlhIGFjIHNlbS4gRXRpYW0gY29uc2VxdWF0IGVyb3MgdXJuYSwgbm9uIGZldWdpYXQgdmVsaXQgZWdlc3RhcyBhIGx1Y3R1cyBuaXNsLCBxdWlzIGZyaW5naWxsYSBuaXNpIG1ldHVzIG5lYyBuaXNpLiBJbiBtYXNzYSBzZW0sIHBvcnRhIHNhZ2l0dGlzIHNjZWxlcmlzcXVlIGluLCBsYW9yZWV0IG5lYyBlc3QuIFNlZCBzZWQgbWF1cmlzIGF1Z3VlLiBEdWlzIHZlbmVuYXRpcywgYXVndWUgdmVsIGJpYmVuZHVtIGF1Y3RvciwgbWF1Y3VsYSBsYW9yZWV0IGRpYW0gYSBpbXBlcmRpZXQuIFBoYXNlbGx1cyBxdWlzIGxhY3VzIHNlbXBlciwgc3VzY2lwaXQgdHVycGlzIG5vbiwgZGlnbmlzc2ltIG1hc3NhLg0KDQpNYWVjZW5hcyBwaGFyZXRyYSBsZWN0dXMgdmVsaXQsIHV0IGxvYm9ydGlzIG1hc3NhIHZlc3RpYnVsdW0gYWMuIFBoYXNlbGx1cyB2ZW5lbmF0aXMgbGFjdXMgbWksIHNpdCBhbWV0IGZhY2lsaXNpcyBhbnRlIGNvbnNlcXVhdCBsYW9yZWV0LiBVdCByaG9uY3VzIGV4IGFyY3UsIGVnZXQgY29tbW9kbyBhbnRlIGZyaW5naWxsYSB1dC4gRXRpYW0gZXQgZXN0IG5pc2kuIENyYXMgbnVsbGEgdG9ydG9yLCBzb2RhbGVzIHZpdGFlIHVybmEgYSwgc29sbGljaXR1ZWNlbmFzIHBsYWNlcmF0IGFyY3Ugbm9uIHRvcnRvciBmZXVnaWF0IHNhZ2l0dGlzLiBWZXN0aWJ1bHVtIGlkIGF1Z3VlIGVnZXQgZXJvcyBibGFuZGl0IGV1aXNtb2Qgc2l0IGFtZXQgbm9uIG1pLiBJbiBjb25zZXF1YXQgZmFjaWxpc2lzIHN1c2NpcGl0LiBNYWVjZW5hcyB1dCBuaXNsIG1hdHRpcywgbGFvcmVldCBuZXF1ZSBwZWxsZW50ZXNxdWUsIGZhdWNpYnVzIG5lcXVlLiBTZWQgcG9zdWVyZSBtaSBhdCBhbnRlIHBvcnRhLCBhIGZyaW5naWxsYSBpcHN1bSBydXRydW0uIFF1aXNxdWUgZXUgdHVycGlzIGFsaXF1ZXQsIHNvZGFsZXMgYXJjdSBibGFuZGl0LCBpYWN1bGlzIHR1cnBpcy4gTmFtIG51bGxhIGp1c3RvLCBzY2VsZXJpc3F1ZSBlZ2V0IHBlbGxlbnRlc3F1ZSBxdWlzLCBwbGFjZXJhdCB2aXRhZSBuaXNsLiBNYXVyaXMgdmVzQWxpcXVhbSBhIGF1Z3VlIGVnZXQgb3JjaSB2b2x1dHBhdCBpbXBlcmRpZXQgcXVpcyBjb252YWxsaXMgdG9ydG9yLg0KDQpDdXJhYml0dXIgZXUgcXVhbSBleC4gU2VkIHRlbXBvciBtaSBxdWlzIHR1cnBpcyBlbGVtZW50dW0gbGFjaW5pYS4gVXQgZXUgZXN0IHBsYWNlcmF0LCB2b2x1dHBhdCBuaWJoIHNlZCwgdm9sdXRwYXQgbWFnbmEuIFNlZCBldSBhbGlxdWFtIG5pYmguIE1hdXJpcyBpbiBsYWN1cyB1dCBleCB1bGxhbWNvcnBlciB2ZW5lbmF0aXMgaWQgdml0YWUgbmliaC4gSW50ZWdlciBzZWQgdGVtcG9yIHJpc3VzLiBDdXJhYml0dXIgcGhhcmV0cmEsIGlwc3VtIHF1aXMgaGVuZHJlcml0IGZlcm1lbnR1bSwgbmliaCBlbmltIHBvc3VlcmUgbmlzbCwgbmVjIGRpY3R1bSBzZW0gZW5pbSBlbGVpZmVuZCB2ZWxpdC4gTW9yYmkgc29kYWxlcyBzYWdpdHRpcyBsZW8uIFZpdmFtdXMgYWMgcHVydXMgcXVpcyBuaXNpIG1vbGVzdGllIG1hdHRpcyBpbiBxdWlzIGVyb3MuIFBoYXNlbGx1cyBldWlzbW9kIHRvcnRvciBxdWlzIGRvbG9yIGNvbW1vZG8gY29uc2VjdGV0dXIuIFZlc3RpYnVsdW0gZmluaWJ1cyBmZWxpcyBldSBtaSB2ZW5lbmF0aXMgdHJpc3RpcXVlLg0KDQpQaGFzZWxsdXMgZWxlbWVudHVtIHNlbSBudWxsYSwgaWQgdm9sdXRwYXQgb2RpbyB0cmlzdGlxdWUgYS4gUGhhc2VsbHVzIHNpdCBhbWV0IGxlY3R1cyBub24gbGlndWxhIG1hbGVzdWFkYSBlZ2VzdGFzLiBQcmFlc2VudCBtYXhpbXVzIHF1aXMgbmlzbCB2ZWwgZGFwaWJ1cy4gRHVpcyBsaWJlcm8gZW5pbSwgYWxpcXVhbSBwZWxsZW50ZXNxdWUgZXJvcyBpbiwgcHJldGl1bSBmZXJtZW50dW0gaXBzdW0uIERvbmVjIHNvbGxpY2l0dWRpbiBhdWN0b3IgcG9ydGEuIFBlbGxlbnRlc3F1ZSBpcHN1bSBsaWJlcm8sIHNvbGxpY2l0dWRpbiBuZWMgbG9yZW0gaWQsIGltcGVyZGlldCBwcmV0aXVtIGVsaXQuIEludGVnZXIgbmVjIGxlbyBkdWkuIFZpdmFtdXMgY3Vyc3VzIGxlbyBub24gYXVndWUgc2FnaXR0aXMgc29kYWxlcy4gSW4gcGVsbGVudGVzcXVlIGVmZmljaXR1ciBzYXBpZW4gYSB2b2x1dHBhdC4gRG9uZWMgbWFnbmEgbWFnbmEsIG1hdHRpcyBpZCBvZGlvIG5vbiwgZWxlaWZlbmQgcG9ydHRpdG9yIG5lcXVlLiBQcmFlc2VudCBoZW5kcmVyaXQsIG5pc2kgZ3JhdmlkYSBmZXJtZW50dW0gdHJpc3RpcXVlLCBqdXN0byBkb2xvciBmYXVjaWJ1ciBtYXhpbXVzLg0KDQpQaGFzZWxsdXMgc2NlbGVyaXNxdWUgbGFjdXMgZWdldCBkb2xvciBwZWxsZW50ZXNxdWUgY29uZGltZW50dW0uIFBoYXNlbGx1cyBmcmluZ2lsbGEgcXVhbSBpZCBlbmltIGx1Y3R1cyBwcmV0aXVtLiBQcm9pbiBwZWxsZW50ZXNxdWUgZXUgbG9yZW0gZXUgdWxsYW1jb3JwZXIuIE51bmMgbGFjdXMgaXBzdW0sIGNvbnZhbGxpcyBpbiBtYWduYSBpZCwgbW9sZXN0aWUgaWFjdWxpcyBkdWkuIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIE51bGxhIHF1aXMgbmlzaSBhcmN1LiBEb25lYyBsaWd1bGEgZmVsaXMsIHN1c2NpcGl0IGlkIG51bGxhIG5vbiwgY3Vyc3VzIGNvbmd1ZSBtYXVyaXMuIFNlZCB0b3J0b3IgbGFjdXMsIGFsaXF1YW0gZWdldCBtYXNzYSBuZWMsIG1heGltdXMgZWxlbWVudHVtIGp1c3RvLg0KDQpDbGFzcyBhcHRlbnQgdGFjaXRpIHNvY2lvc3F1IGFkIGxpdG9yYSB0b3JxdWVudCBwZXIgY29udWJpYSBub3N0cmEsIHBlciBpbmNlcHRvcyBoaW1lbmFlb3MuIE9yY2kgdmFyaXVzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMsIG5hc2NldHVyIHJpZGljdWx1cyBtdXMuIFN1c3BlbmRpc3NlIHV0IHNlbSBxdWFtLiBNb3JiaSB1bGxhbWNvcnBlciBsb3JlbSBtYXVyaXMsIGlkIHRyaXN0aXF1ZSBsaWd1bGEgcGhhcmV0cmEgZXUuIERvbmVjIGZldWdpYXQsIGxlbyBub24gaW50ZXJkdW0gYWNjdW1zYW4sIGRvbG9yIG1pIGxvYm9ydGlzIGxlbywgc2l0IGFtZXQgbWF0dGlzIG9kaW8gbnVuYyBldSBleC4gU2VkIHZpdGFlIG51bmMgZW5pbS4gU3VzcGVuZGlzc2UgdnVscHV0YXRlIGZyaW5naWxsYSBlcmF0LCB2ZWwgdWx0cmljaWVzIGVzdCBsb2JvcnRpcyB2aXRhZS4gUHJvaW4gYWMgbGVvIGluIGxhY3VzIHJob25jdXMgc2NlbGVyaXNxdWUgZWdldCBzaXQgYW1ldCB0ZWxsdXMuIEN1cmFiaXR1ciBsYW9yZWV0IHBlbGxlbnRlc3F1ZSBlcm9zLCBzaXQgYW1ldCBzb2xsaWNpdHVkaW4gZXJvcyB0ZW1wb3IgdWxsYW1jb3JwZXIuIFV0IGlkIGFjY3Vtc2FuIGVyb3MuIE1hdXJpcyBjb25zZXF1YXQsIGp1c3RvIGluIHJ1dHJ1bSBjdXJzdXMsIGxpZ3VsYSBkdWkgdGVtcHVzIG9kaW8sIHZlbCBmYXVjaWJ1cyBhbnRlIGxpZ3VsYSBhIGV4LiBDcmFzIHZlc3RpYnVsdW0gZmluaWJ1cyBtYXBpYnVzLCBoZW5kcmVyaXQgbGlndWxhIGEsIGVsZWlmZW5kIGR1aS4gRXRpYW0gdml0YWUgZWxlbWVudHVtIG5pc2wuIEZ1c2NlIGNvbmd1ZSBsdWN0dXMgYWNjdW1zYW4uDQoNCk51bmMgbWV0dXMgYXJjdSwgdWxsYW1jb3JwZXIgYXQgZXggZWdldCwgdml2ZXJyYSBhdWN0b3Igb2Rpby4gTnVsbGEgcG9ydGEgc2VkIG1hdXJpcyB2ZWwgcG9ydHRpdG9yLiBFdGlhbSBsdWN0dXMgbGVvIHF1aXMgc2FnaXR0aXMgZmFjaWxpc2lzLiBQZWxsZW50ZXNxdWUgYWNjdW1zYW4gaW4gb2RpbyBub24gcGxhY2VyYXQuIEluIGV0IGFjY3Vtc2FuIG5pc2kuIEFsaXF1YW0gYWMgdG9ydG9yIG1hdHRpcywgcGVsbGVudGVzcXVlIHJpc3VzIHNpdCBhbWV0LCB1bHRyaWNpZXMgbGFjdXMuIE51bmMgaW50ZXJkdW0gZWxpdCB2ZWwgbGliZXJvIGlhY3VsaXMgYWNjdW1zYW4uIFV0IHNpdCBhbWV0IGNvbW1vZG8gZWxpdCwgaW50ZXJkdW0gdm9sdXRwYXQgb3JjaS4gSW4gbHVjdHVzIG5pc2kgcXVhbSwgdmVsIHNhZ2l0dGlzIGxpYmVybyBzdXNjaXBpdCBhLiBOYW0gcHVsdmluYXIsIG51bmMgYWMgZWxlbWVudHVtIHJ1dHJ1bSwgbGVjdHVzIGxlbyBmYWNpbGlzaXMgZXJvcywgbm9uIHBvcnRhIGxpYmVybyBudW5jIHF1aXMgcmlzdXMuDQoNCkludGVnZXIgYXQgbGliZXJvIGZldWdpYXQsIHB1bHZpbmFyIHZlbGl0IGltcGVyZGlldCwgaW50ZXJkdW0gZG9sb3IuIFByYWVzZW50IHNpdCBhbWV0IHVybmEgdmVsaXQuIFN1c3BlbmRpc3NlIG5lYyB0ZW1wb3IgaXBzdW0sIHZpdGFlIHBsYWNlcmF0IGxlby4gUGhhc2VsbHVzIHNvbGxpY2l0dWRpbiB2ZXN0aWJ1bHVtIHNvZGFsZXMuIERvbmVjIGNvbmd1ZSBsdWN0dXMgc2NlbGVyaXNxdWUuIER1aXMgdmVzdGlidWx1bSB1cm5hIHZlbCBkaWFtIGN1cnN1cywgZWdldCB1bHRyaWNpZXMgc2FwaWVuIGVsZWlmZW5kLiBVdCBtYWxlc3VhZGEgbWF1cmlzIG51bGxhLCBldCB2aXZlcnJhIG51bmMgc29kYWxlcyBldC4gVmVzdGlidWx1bSBub24gcG9ydHRpdG9yIG5pYmguDQoNCkluIHZpdGFlIHNvbGxpY2l0dWRpbiBhbnRlLiBJbnRlZ2VyIGF0IG1hZ25hIGxhY2luaWEsIG1vbGxpcyB2ZWxpdCBhdCwgZmVybWVudHVtIG1ldHVzLiBFdGlhbSBhYyB0dXJwaXMgYmliZW5kdW0sIHJob25jdXMgcHVydXMgZXQsIHRlbXBvciBlc3QuIEFsaXF1YW0gdGluY2lkdW50IGV0IGRvbG9yIGV0IHVsbGFtY29ycGVyLiBNYWVjZW5hcyBzdXNjaXBpdCBsZWN0dXMgdmVoaWN1bGEgbG9yZW0gYWxpcXVldCwgYXQgZWdlc3RhcyBmZWxpcyBpYWN1bGlzLiBGdXNjZSBxdWlzIG5pc2kgdGVtcHVzLCBwZWxsZW50ZXNxdWUgZGlhbSB1dCwgbWF4aW11cyBleC4gTWFlY2VuYXMgc2VkIGRpY3R1bSBuZXF1ZS4gQWxpcXVhbSBwb3J0dGl0b3IgdmVsIGRpYW0gc2VkIHNhZ2l0dGlzLiBNYWVjZW5hcyBzb2xsaWNpdHVkaW4gY29uZ3VlIHZlbmVuYXRpcy4gSW4gdGVsbHVzIG1pLCBmZXJtZW50dW0gdXQgcG9ydHRpdG9yIG5lYywgbGFvcmVldCBuZWMgc2FwaWVuLiBTdXNwZW5kaXNzZSBwb3RlbnRpLiBOYW0gdnVscHV0YXRlIHZ1bHB1dGF0ZSBsb3JlbSwgdXQgc29kYWxlcyBvcmNpIGZldWdpYXQgdml0YWUuDQoNClZpdmFtdXMgZXUgcGhhcmV0cmEgbGVvLiBNYXVyaXMgdml0YWUgY29uZ3VlIHZlbGl0LCBub24gYXVjdG9yIHR1cnBpcy4gU2VkIHVsbGFtY29ycGVyIGRvbG9yIG5lYyBlZmZpY2l0dXIgYWxpcXVldC4gTnVsbGEgdml0YWUgZmVsaXMgY29uc2VjdGV0Y3Vyc3VzIGRpZ25pc3NpbSwgbG9yZW0gZWxpdCBsYWNpbmlhIGVuaW0sIHZpdGFlIGFsaXF1ZXQgZXggZXJvcyB1dCBuZXF1ZS4gQWxpcXVhbSB2aXRhZSBpcHN1bSBzaXQgYW1ldCBudW5jIGVmZmljaXR1ciB0ZW1wdXMgdXQgbm9uIGRvbG9yLiBTZWQgbm9uIHRlbGx1cyBwb3J0YSwgbG9ib3J0aXMgbWV0dXMgaWQsIGRpZ25pc3NpbSBwdXJ1cy4gQ3VyYWJpdHVyIGF0IGxlY3R1cyBhY2N1bXNhbiwgbW9sZXN0aWUgZW5pbSBzZWQsIHRyaXN0aXF1ZSB2ZWxpdC4gQ3JhcyB2ZW5lbmF0aXMgZHVpIGEgcGVsbGVudGVzcXVlIHRpbmNpZHVudC4gQWVuZWFuIHJob25jdXMgaW4gZmVsaXMgc2l0IGFtZXQgdmVoaWN1bGEuDQoNCkFsaXF1YW0gYWNjdW1zYW4gbmVxdWUgbm9uIG1hZ25hIGdyYXZpZGEgdGluY2lkdW50LiBNYXVyaXMgYWNjdW1zYW4gcmlzdXMgc2VkIHVybmEgdml2ZXJyYSBwb3J0YS4gUGhhc2VsbHVzIHVsbGFtY29ycGVyIGVsZW1lbnR1bSBkdWksIG5vbiBtb2xlc3RpZSBzYXBpZW4gYWxpcXVhbSBub24uIFBlbGxlbnRlc3F1ZSBzdXNjaXBpdCBpbiBtYWduYSBsb2JvcnRpcyBhdWN0b3IuIFF1aXNxdWUgbm9uIGF1Y3RvciBsaWJlcm8uIFNlZCBhYyBibGFuZGl0IGVyYXQsIGFjIG1hbGVzdWFkYSBudW5jLiBNYWVjZW5hcyBwdWx2aW5hciBudW5jIG1hc3NhLCB1dCBwb3N1ZXJlIG1hZ25hIGdyYXZpZGEgYS4gQWxpcXVhbSBlcmF0IHZvbHV0cGF0LiBNYXVyaXMgZmF1Y2lidXMgb3JuYXJlIHNlbSwgc2VkIHNhZ2l0dGlzIHB1cnVzIHB1bHZpbmFyIHZlbC4gUHJvaW4gY29uc2VjdGV0dXIgdmFyaXVzIGFudGUgYWMgYmliZW5kdW0uIFNlZCBzaXQgYW1ldCB1bHRyaWNlcyBwdXJ1cy4gUXVpc3F1ZSB0aW5jaWR1bnQgbG9yZW0gYXQgbnVuYyB2ZWhpY3VsYSBmaW5pYnVzLiBQcm9pbiBhYyBudW5jIGFjIHZlbGl0IGxhb3JlZXQgdWxsYW1jb3JwZXIgZnJpbmdpbGxhIGFjIHF1YW0uIE1vcmJpIGF1Y3RvciBsaWd1bGEgZWdldCBqdXN0byBpYWN1bGlzLCBzaXQgYW1ldCBhbGlxdWV0IHZlbGl0IHRlbXBvci4gU2VkIHBvcnR0aXRvciBsaWd1bGEgYXQgdHVycGlzIHJ1dHJ1bSBydXRydW0uIFZlc3RpYnVsdW0gbmVjIHZlbGl0IGFyY3UuDQo=%UUU#EOFkirim1.txtyZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gVXQgZWdldCBsb2JvcnRpcyB0b3J0b3IuIE1hdXJpcyBldWlzbW9kIGVyYXQgZW5pbSwgdGluY2lkdW50IGJsYW5kaXQganVzdG8gbG9ib3J0aXMgbmVjLiBOdWxsYSBmYXVjaWJ1cyB0ZWxsdXMgZXQgZXggcHJldGl1bSwgbm9uIHRpbmNpZHVudCByaXN1cyBtYXR0aXMuIERvbmVjIHJ1dHJ1bSwgbnVuYyBpbiBwbGFjZXJhdCB1bGxhbWNvcnBlciwgYXJjdSBzYXBpZW4gdnVscHV0YXRlIG5lcXVlLCBzZWQgbHVjdHVzIGV4IGp1bHVjdHVzIGV0IHVsdHJpY2VzIHBvc3VlcmUgY3ViaWxpYSBjdXJhZTsgVXQganVzdG8gZmVsaXMsIHN1c2NpcGl0IHZpdGFlIHB1bHZpbmFyIGV0LCBhbGlxdWV0IGlkIG1ldHVzLiBWZXN0aWJ1bHVtIGZldWdpYXQgcXVhbSB1dCBsb3JlbSB1bGxhbWNvcnBlciBmaW5pYnVzLiBOdWxsYW0gc29kYWxlcyBzb2RhbGVzIGRvbG9yLCBuZWMgY29uZ3VlIG51bmMgcGxhY2VyYXQgdXQuIEFsaXF1YW0gZXUgdmVzdGlidWx1bSB0dXJwaXMuIFBlbGxlbnRlc3F1ZSBoYWJpdGFudCBtb3JiaSB0cmlzdGlxdWUgc2VuZWN0dXMgZXQgbmV0dXMgZXQgbWFsZXN1YWRhIGZhbWVzIGFjIHR1cnBpcyBlZ2VzdGFzLiBEb25lYyBsdWN0dXMsIGxlbyBhdWN0b3IgZWxlaWZlbmQgYmxhbmRpdCwgZWxpdCBlbmltIHZpdmVycmEgbGVjdHVzLCBuZWMgZGlnbmlzc2ltIGRvbG9yIG5pc2kgZXUgYW50ZS4gSW50ZXJkdW0gZXQgbWFsZXN1YWRhIGZhbWVzIGFjIGFudGUgY3VsaXMgdmVsIHV0IGVzdC4gUGVsbGVudGVzcXVlIGhhYml0YW50IG1vcmJpIHRyaXN0aXF1ZSBzZW5lY3R1cyBldCBuZXR1cyBldCBtYWxlc3VhZGEgZmFtZXMgYWMgdHVycGlzIGVnZXN0YXMuDQoNCkR1aXMgdWx0cmljaWVzIGFyY3UgcGxhY2VyYXQgZGlhbSBpbXBlcmRpZXQsIGEgdGluY2lkdW50IGxlY3R1cyBtb2xlc3RpZS4gQWxpcXVhbSBlZmZpY2l0dXIgZXN0IGFjIGxvYm9ydGlzIHBlbGxlbnRlc3F1ZS4gUGVsbGVudGVzcXVlIGhhYml0YW50IG1vcmJpIHRyaXN0aXF1ZSBzZW5lY3R1cyBldCBuZXR1cyBldCBtYWxlc3VhZGEgZmFtZXMgYWMgdHVycGlzIGVnZXN0YXMuIFBlbGxlbnRlc3F1ZSBub24gbmVxdWUgYW50ZS4gQ3JhcyBldCBncmF2aWRhIGZlbGlzLCB2aXRhZSBncmF2aWRhIGVyYXQuIERvbmVjIG9ybmFyZSBlcm9zIHV0IGR1aSBwb3J0YSwgc2VkIG1vbGVzdGllIGRpYW0gZGFwaWJ1cy4gTWF1cmlzIGVzdCBlc3QsIGVsZW1lbnR1bSBhIGZpbmlidXMgdmVsLCB1bHRyaWNlcyBzZWQgbWV0dXMuIFZpdmFtdXMgZmV1Z2lhdCBlcm9zIHNlZCBjdXJzdXMgbWF0dGlzLiBBZW5lYW4gcmhvbmN1cyB2aXRhZSBkaWFtIGF0IHZlbmVuYXRpcy4NCg0KRG9uZWMgYmliZW5kdW0gbW9sbGlzIHR1cnBpcywgc2VkIGNvbW1vZG8gbGliZXJvIHVsbGFtY29ycGVyIGFjLiBOdW5jIHNpdCBhbWV0IG1hdXJpcyBhdCBtZXR1cyBjb21tb2RvIHBsYWNlcmF0IGlkIHNpdCBhbWV0IHNlbS4gTWFlY2VuYXMgdnVscHV0YXRlIGltcGVyZGlldCBvcm5hcmUuIE51bGxhbSBmZWxpcyBsb3JlbSwgZGFwaWJ1cyB2ZWwgb3JjaSBzZWQsIHRpbmNpZHVudCBzZW1wZXIgZHVpLiBOYW0gaW4gZWxlbWVudHVtIGVsaXQuIFBoYXNlbGx1cyBsYW9yZWV0IGludGVyZHVtIG9yY2kuIER1aXMgYXVjdG9yIGF1Z3VlIHV0IGVyb3MgZXVpc21vZCwgbm9uIGZlcm1lbnR1bSBleCBtb2xsaXMuDQoNCkludGVnZXIgdml0YWUgZXJvcyB1dCBsaWJlcm8gZGlnbmlzc2ltIGZhY2lsaXNpcyBzZWQgc2VkIG1pLiBJbiBoYWMgaGFiaXRhc3NlIHBsYXRlYSBkaWN0dW1zdC4gU2VkIHNjZWxlcmlzcXVlIHBoYXJldHJhIG5pc2wgc2VkIHBoYXJldHJhLiBJbiBpbnRlcmR1bSBuZXF1ZSBvcmNpLCBxdWlzIGJsYW5kaXQgdGVsbHVzIG1heGltdXMgaWQuIEFlbmVhbiB2aXZlcnJhIGVsaXQgc2VkIGVyYXQgdm9sdXRwYXQsIHNlZCBwbGFjZXJhdCBqdXN0byBzY2VsZXJpc3F1ZS4gRG9uZWMgY29tbW9kbyBwdWx2aW5hciBvcmNpLCBxdWlzIGZhY2lsaXNpcyB0dXJwaXMgYWxpcXVldCB2aXRhZS4gVXQgZXUgdmFyaXVzIG1ldHVzLCBpbiBkaWN0dW0gcHVydXMuDQoNCkZ1c2NlIHVsbGFtY29ycGVyIGJsYW5kaXQgcG9ydHRpdG9yLiBNYWVjZW5hcyBtYXR0aXMgY29uc2VxdWF0IGFyY3UgaW4gbG9ib3J0aXMuIE1hZWNlbmFzIGEgdGluY2lkdW50IGVyYXQuIFV0IGV4IGVuaW0sIG9ybmFyZSBzZWQgcnV0cnVtIHNlZCwgYWNjdW1zYW4gZWdldCBsZWN0dXMuIE1hdXJpcyBzaXQgYW1ldCBzZW1wZXIgbmlzbCwgaW50ZXJkdW0gZnJpbmdpbGxhIG1hdXJpcy4gTW9yYmkgZWdldCBsYWN1cyBlcm9zLiBNYXVyaXMgYWMgbGFjdXMgaGVuZHJlcml0LCBmYWNpbGlzaXMgZXggYSwgb3JuYXJlIHF1YW0uIFByYWVzZW50IHBlbGxlbnRlc3F1ZSBlcmF0IGRvbG9yLCB2ZWwgaW50ZXJkdW0gcHVydXMgbG9ib3J0aXMgY3Vyc3VzLiBBZW5lYW4gYSBiaWJlbmR1bSBlcm9zLCBldCBlZ2VzdGFzIHZlbGl0LiBOYW0gZW5pbSBkb2xvciwgcHJldGl1bSB1dCBtYXVyaXMgbm9uLCBwcmV0aXVtIGxhb3JlZXQgbGFjdXMuIERvbmVjIG5lYyBuaWJoIG5lYyBkaWFtIHB1bHZpbmFyIGZhY2lsaXNpcy4NCg0KUGVsbGVudGVzcXVlIGFsaXF1YW0gdHVycGlzIHV0IGZldWdpYXQgbWF0dGlzLiBJbnRlZ2VyIG1vbGVzdGllIHB1cnVzIHV0IGZlcm1lbnR1bSBibGFuZGl0LiBDdXJhYml0dXIgdml2ZXJyYSByaG9uY3VzIG1heGltdXMuIE5hbSBhbGlxdWFtIGF0IHRlbGx1cyBldSBwaGFyZXRyYS4gUHJhZXNlbnQgdHVycGlzIHNhcGllbiwgc2NlbGVyaXNxdWUgbWFsZXN1YWRhIHNlbSBhLCBvcm5hcmUgY29udmFsbGlzIGFudGUuIFZlc3RpYnVsdW0gcGVsbGVudGVzcXVlIGVuaW0gbm9uIG5lcXVlIHJ1dHJ1bSwgc2VkIGVnZXN0YXMgZXJvcyBsb2JvcnRpcy4gTnVsbGEgY29tbW9kbyBtYXNzYSB2ZWwgZWxlaWZlbmQgYXVjdG9yLiBNYXVyaXMgdmVsIGVsaXQgdXQgbGVvIG1vbGVzdGllIHRpbmNpZHVudCBhIHZlaGljdWxhIGxhY3VzLg0KDQpOdWxsYSB2dWxwdXRhdGUgdmVoaWN1bGEgYXJjdSwgZWdldCBsYW9yZWV0IG51bmMgcG9ydGEgZWdldC4gRHVpcyBjb25zZWN0ZXR1ciBncmF2aWRhIG9yY2kgdXQgcnV0cnVtLiBTZWQgbWF4aW11cyBtZXR1cyBkb2xvciwgaW4gdGluY2lkdW50IGxpZ3VsYSBhdWN0b3IgcXVpcy4gRG9uZWMgZXN0IG1ldHVzLCBmcmluZ2lsbGEgaW4gcmlzdXMgdm9sdXRwYXQsIGhlbmRyZXJpdCB0ZW1wdXMgbGVvLiBNb3JiaSBibGFuZGl0IG5pYmggZWdldCBpbXBlcmRpZXQgdGVtcHVzLiBQaGFzZWxsdXMgZWZmaWNpdHVyIGVyb3MgYSB1bHRyaWNlcyBwb3J0dGl0b3IuIFNlZCBjb21tb2RvIHNlZCBuaWJoIHNlZCBsYW9yZWV0LiBOdWxsYSB1dCBtYWxlc3VhZGEgbGlndWxhLiBJbiBtYWxlc3VhZGEgcHVsdmluYXIgcHVydXMgZXUgdGluY2lkdW50LiBFdGlhbSBmYWNpbGlzaXMgaXBzdW0gbWV0dXMsIGluIGludGVyZHVtIGxpYmVybyB2b2x1dHBhdCBhLiBBZW5lYW4gdml0YWUgc29sbGljaXR1ZGluIG9kaW8sIGlkIHRpbmNpZHVudCB0dXJwaXMuIFN1c3BlbmRpc3NlIHN1c2NpcGl0IG1hdHRpcyBhdWd1ZSwgaW4gcG9ydGEgcmlzdXMgbHVjdHVzIG5lYy4NCg0KSW4gbm9uIG1ldHVzIGlkIGxlY3R1cyBvcm5hcmUgbG9ib3J0aXMgcXVpcyBpbiBlbmltLiBBbGlxdWFtIGFjIGFjY3Vtc2FuIG1pLiBTdXNwZW5kaXNzZSBldCBhbGlxdWV0IGFyY3UuIFBlbGxlbnRlc3F1ZSBldSBsb3JlbSBuZWMgbWV0dXMgcG9ydGEgYXVjdG9yLiBOdWxsYSBmYWNpbGlzaS4gUXVpc3F1ZSB0b3J0b3IganVzdG8sIGJpYmVuZHVtIHBsYWNlcmF0IGRhcGlidXMgdmVzdGlidWx1bSwgY29uc2VxdWF0IGF0IGxlby4gQ3VyYWJpdHVyIGNvbnNlcXVhdCBhcmN1IHF1aXMgdGVsbHVzIHJob25jdXMsIGlkIGVsZWlmZW5kIGVsaXQgbWFsZXN1YWRhLiBOdWxsYSBsZW8gZHVpLCBwbGFjZXJhdCB2ZWwgbnVsbGEgZXQsIHBsYWNlcmF0IGdyYXZpZGEgYXJjdS4gVml2YW11cyBudWxsYSBsZW8sIHNvbGxpY2l0dWRpbiBldSB2b2x1dHBhdCBhYywgcHVsdmluYXIgaW5naWxsYSwgcXVpcyBwcmV0aXVtIGFudGUgYXVjdG9yLiBWZXN0aWJ1bHVtIGludGVyZHVtIG5lYyBsYWN1cyB1dCB2b2x1dHBhdC4gRnVzY2UgbWF4aW11cyBhdWN0b3IgbG9yZW0gdXQgbG9ib3J0aXMuIE1vcmJpIGNvbnNlY3RldHVyLCB2ZWxpdCBlZ2V0IGZpbmlidXMgcmhvbmN1cywgb2RpbyBkdWkgZmluaWJ1cyBuaXNpLCBzZWQgcGhhcmV0cmEgZHVpIGlwc3VtIG1heGltdXMgcXVhbS4NCg0KTWF1cmlzIHNlZCBuaXNsIGV4LiBWZXN0aWJ1bHVtIGluIHByZXRpdW0gcmlzdXMuIERvbmVjIGxlbyBwdXJ1cywgYWxpcXVhbSB2aXRhZSBvcm5hcmUgZXQsIGludGVyZHVtIGV0IHVybmEuIFZlc3RpYnVsdW0gYXVjdG9yLCB0dXJwaXMgYXQgYWNjdW1zYW4gZWxlbWVudHVtLCBudWxsYSBhcmN1IG1vbGxpcyBxdWFtLCBub24gdGVtcHVzIG5pYmggZmVsaXMgbmVjIGxpZ3VsYS4gVml2YW11cyBuZWMgYWxpcXVldCBuZXF1ZS4gVml2YW11cyBjb25kaW1lbnR1bSBsaWd1bGEgZWdldCBlcmF0IGVnZXN0YXMgdm9sdXRwYXQuIEFsaXF1YW0gcGxhY2VyYXQgcHVsdmluYXIgdmVsaXQgbm9uIGxhY2luaWEuIEZ1c2NlIG5vbiB2YXJpdXMgbmlzaS4gRnVzY2Ugc2VkIHNhcGllbiBsb3JlbS4gRHVpcyBzb2xsaWNpdHVkaW4gZWxpdCBldSBpbXBlcmRpZXQgdml2ZXJyYS4gVXQgbm9uIHVsbGFtY29ycGVyIHRvcnRvci4gSW50ZWdlciBpbiBuaXNpIHF1aXMgZmVsaXMgaGVuZHJlcml0IGNvbW1vZG8uIERvbmVjIGFjY3Vtc2FuIGFjIGp1c3RvIHZpdGFlIGVnZXN0YXMuIEN1cmFiaXR1ciBub24gaW50ZXJkdW0gZHVpLg0KDQpOdW5jIHVsbGFtY29ycGVyIHJ1dHJ1bSBwdXJ1cyBwb3J0YSB0ZW1wdXMuIFByb2luIGluIHJpc3VzIGV0IG1hc3NhIGVmZmljaXR1ciBjb252YWxsaXMuIE1hZWNlbmFzIHZlc3RpYnVsdW0gdmVuZW5hdGlzIGVyb3MgYXQgcGVsbGVudGVzcXVlLiBTdXNwZW5kaXNzZSB2aXRhZSBqdXN0byBpbiBqdXN0byB2dWxwdXRhdGUgcmhvbmN1cy4gTWF1cmlzIG1heGltdXMgcXVhbSBldSBlcmF0IGRhcGlidXMgZmF1Y2lidXMuIER1aXMgYSBlcmF0IGVnZXQgZXN0IGFsaXF1YW0gbGFjaW5pYSBuZWMgZWdldCBzYXBpZW4uIFBlbGxlbnRlc3F1ZSBjb252YWxsaXMgbWFnbmEgdmVsIGVsZWlmZW5kIGFjY3Vtc2FuLiBNb3JiaSBpbXBlcmRpZXQsIG1pIHV0IHZlbmVuYXRpcyB2ZWhpY3VsYSwgZW5pbSBvcmNpIGVsZWlmZW5kIGRvbG9yLCBzaXQgYW1ldCBkaWduaXNzaW0gbnVuYyBkb2xvciBldCB0ZWxsdXMuIENsYXNzIGFwdGVudCB0YWNpdGkgc29jaW9zcXUgYWQgbGl0b3JhIHRvcnF1ZW50IHBlciBjb251YmlhIG5vc3RyYSwgcGVyIGluY2VwdG9zIGhpbWVuYWVvcy4gTW9yYmkgZXQgdXJuYSBwdXJ1cy4gVmVzdGlidWx1bSBjb25zZWN0ZXR1ciByaXN1cyB2aXRhZSBjb25zZXF1YXQgY29uc2VjdGV0dXIuIFNlZCBoZW5kcmVyaXQgb3JuYXJlIHNlbXBlci4gRG9uZWMgdml0YWUgZmVybWVudHVtIG1hZ25hLiBOdW5jIHNvbGxpY2l0dWRpbiwgbWFzc2EgYXQgb3JuYXJlIHJ1dHJ1bSwgaXBzdW0gb3JjaSBtb2xsaXMgZW5pbSwgdmVsIGZlcm1lbnR1bSB0dXJwaXMgb2RpbyBhIHRlbGx1cy4NCg0KTWFlY2VuYXMgbGFvcmVldCBsYWN1cyBtb2xsaXMgbmVxdWUgdmVzdGlidWx1bSBydXRydW0uIFZlc3RpYnVsdW0gbHVjdHVzIHNvbGxpY2l0dWRpbiBuaXNpIHNlZCBtYXhpbXVzLiBRdWlzcXVlIGxvYm9ydGlzIG1pIGFyY3UsIHNvbGxpY2l0dWRpbiB2ZXN0aWJ1bHVtIGF1Z3VlIGRhcGlidXMgaWQuIE51bGxhIGF1Y3RvciBhdCBlbGl0IGEgdHJpc3RpcXVlLiBEb25lYyBsdWN0dXMgcHJldGl1bSB0aW5jaWR1bnQuIE5hbSBzY2VsZXJpc3F1ZSBpbXBlcmRpZXQgbnVsbGEsIHV0IG1heGltdXMgZXJhdCBjb25zZXF1YXQgZWdldC4gVml2YW11cyBmZXJtZW50dW0gcXVpcyBsZW8gZXQgb3JuYXJlLiBOdWxsYW0gYWxpcXVhbSBldWlzbW9kIHBvcnRhLiBEdWlzIGNvbnNlY3RldHVyIG1pIHZpdGFlIG1pIGZhdWNpYnVzIHRyaXN0aXF1ZS4gSW50ZWdlciBuZWMgbWFnbmEgYWMgZW5pbSBsYW9yZWV0IGZhY2lsaXNpcy4gSW50ZXJkdW0gZXQgbWFsZXN1YWRhIGZhbWVzIGFjIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzLiBOdWxsYSBjb25zZXF1YXQsIGxhY3VzIHF1aXMgdmVzdGlidWx1bSB2aXZlcnJhLCBwdXJ1cyBleCBlZmZpY2l0dXIgcmlzdXMsIGV0IHB1bHZpbmFyIG5pc2wgdG9ydG9yIHV0IGxvcmVtLg0KDQpEdWlzIHV0IG9yY2kgYmxhbmRpdCBzZW0gbWF4aW11cyBwb3J0dGl0b3IgbmVjIG5vbiB1cm5hLiBJbnRlZ2VyIG1heGltdXMgc29sbGljaXR1ZGluIGVmZmljaXR1ci4gTnVsbGFtIG9ybmFyZSBuaWJoIHZpdGFlIGxpZ3VsYSBibGFuZGl0LCBldSBldWlzbW9kIGZlbGlzIHBvcnRhLiBOdW5jIGZhdWNpYnVzIGxhY3VzIGluIHJpc3VzIHJ1dHJ1bSwgZmVybWVudHVtIGJpYmVuZHVtIGVyb3MgdnVscHV0YXRlLiBRdWlzcXVlIGV1IGxhY3VzIHB1cnVzLiBGdXNjZSB0ZW1wdXMgY29uc2VjdGV0dXIgdGVtcG9yLiBRdWlzcXVlIGF0IHByZXRpdW0gdGVsbHVzLg0KDQpOdW5jIG9ybmFyZSBzZWQgcXVhbSB2ZWwgcG9ydHRpdG9yLiBTZWQgdWxsYW1jb3JwZXIgZGlnbmlzc2ltIGVnZXN0YXMuIE51bmMgdXQgYW50ZSBhdWN0b3IsIGVmZmljaXR1ciBlbGl0IHNlZCwgc2FnaXR0aXMgb2Rpby4gRHVpcyBpcHN1bSBsaWd1bGEsIHZvbHV0cGF0IG5vbiBwZWxsZW50ZXNxdWUgbmVjLCB2YXJpdXMgbmVjIGxpZ3VsYS4gU2VkIG1hdHRpcyBsb2JvcnRpcyBzYXBpZW4gZWdldCBkaWN0dW0uIEludGVnZXIgYXQgZWdlc3RhcyBtZXR1cy4gTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4NCg0KTnVuYyBxdWlzIGNvbnZhbGxpcyBlcmF0LiBNYXVyaXMgcHJldGl1bSBhbGlxdWV0IG1hc3NhIHNpdCBhbWV0IGZlcm1lbnR1bS4gUHJvaW4gZXUgc29sbGljaXR1ZGluIGRpYW0sIGlkIHRyaXN0aXF1ZSBqdXN0by4gUHJvaW4gdWxsYW1jb3JwZXIgaXBzdW0gc2VkIGV4IGhlbmRyZXJpdCwgc2l0IGFtZXQgcHJldGl1bSBhcmN1IG1hbGVzdWFkYS4gQWxpcXVhbSBoZW5kcmVyaXQgZXN0IHF1aXMgdHVycGlzIHRpbmNpZHVudCBtb2xlc3RpZS4gRG9uZWMgdGVtcG9yIGV4IHF1aXMgZXggZWxlaWZlbmQgZGljdHVtLiBRdWlzcXVlIHNpdCBhbWV0IGxlY3R1cyBpcHN1bS4NCg0KU3VzcGVuZGlzc2UgaW4gYXJjdSBudWxsYS4gVXQgZGlhbSByaXN1cywgdml2ZXJyYSBmZXVnaWF0IG5pc2kgc2l0IGFtZXQsIHJob25jdXMgcGxhY2VyYXQgZHVpLiBPcmNpIHZhcml1cyBuYXRvcXVlIHBlbmF0aWJ1cyBldCBtYWduaXMgZGlzIHBhcnR1cmllbnQgbW9udGVzLCBuYXNjZXR1ciByaWRpY3VsdXMgbXVzLiBTZWQgcHJldGl1bSBlcm9zIG1hc3NhLiBBZW5lYW4gaW4gbG9ib3J0aXMgcHVydXMuIFBoYXNlbGx1cyBwaGFyZXRyYSBlbGVtZW50dW0gdmFyaXVzLiBDbGFzcyBhcHRlbnQgdGFjaXRpIHNvY2lvc3F1IGFkIGxpdG9yYSB0b3JxdWVudCBwZXIgY29udWJpYSBub3N0cmEsIHBlciBpbmNlcHRvcyBoaW1lbmFlb3MuIE1hdXJpcyB2ZWhpY3VsYSBlbGl0IHF1aXMganVzdG8gYmxhbmRpdCBncmF2aWRhLg0KDQpJbiBqdXN0byByaXN1cywgZmVybWVudHVtIGFjIHVsdHJpY2VzIGNvbmRpYSwgc29kYWxlcyBsZWN0dXMgZWdldCwgZGFwaWJ1cyBlcmF0LiBJbiBtb2xsaXMgdmVsaXQgaWQgc2VtIHNvZGFsZXMgdmFyaXVzLiBVdCBhdCBjb21tb2RvIHVybmEuIEluIHNhcGllbiBsZW8sIHRpbmNpZHVudCB1dCBsZWN0dXMgc2VkLCBlZ2VzdGFzIG9ybmFyZSBxdWFtLiBGdXNjZSB2aXRhZSBpbXBlcmRpZXQgbG9yZW0uDQoNCk51bGxhIHByZXRpdW0gdmVzdGlidWx1bSBhbnRlIHZlbCBpYWN1bGlzLiBOdWxsYSBhbGlxdWV0IHJpc3VzIGVnZXQgbWkgbW9sbGlzIHNvZGFsZXMuIFZpdmFtdXMgc2NlbGVyaXNxdWUgb2RpbyBtYXVyaXMsIGFjIHBoYXJldHJhIHF1YW0gbWFsZXN1YWRhIHNpdCBhbWV0LiBOdW5jIG1vbGVzdGllIGV1IGVyYXQgbm9uIG1heGltdXMuIFV0IGFjIG51bmMgZGljdHVtLCBzb2xsaWNpdHVkaW4gZXJvcyBtYXR0aXMsIGhlbmRyZXJpdCBuaWJoLiBDcmFzIHNpdCBhbWV0IGx1Y3R1cyBsZW8uIERvbmVjIHZlc3RpZW1lbnR1bSB2aXRhZS4gSW50ZXJkdW0gZXQgbWFsZXN1YWRhIGZhbWVzIGFjIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzLiBNYXVyaXMgdmVsIGlhY3VsaXMgcXVhbS4gTWF1cmlzIGVnZXQgbG9ib3J0c2lzLiBNYXVyaXMgbGVvIG5pYmgsIHRpbmNpZHVudCBkaWduaXNzaW0gY29uc2VxdWF0IGV1LCBjb252YWxsaXMgZWdldCBsb3JlbS4gU2VkIHZlbmVuYXRpcyBzb2xsaWNpdHVkaW4gcG9ydGEuIE1vcmJpIHRlbXB1cyBsb3JlbSBxdWFtLCBldSBhdWN0b3IgbGlndWxhIGZldWdpYXQgaWQuIFBlbGxlbnRlc3F1ZSBtb2xsaXMgbmVjIG51bmMgc2l0IGFtZXQgZGlnbmlzc2ltLiBJbnRlZ2VyIG51bmMgZXJhdCwgcGhhcmV0cmEgc2l0IGFtZXQgbWF4aW11cyB2ZWwsIGltcGVyZGlldCBydXRydW0gdXJuYS4gQ3VyYWJpdHVyIGxhY2luaWEgYXVjdG9yIG1hdXJpcyBlZ2V0IHRpbmNpZHVudC4gRG9uZWMgYXQgZW5pbSBsaWd1bGEuIE51bGxhIGN1cnN1cyBkYXBpYnVzIG51bGxhIHZlbCBncmF2aWRhLiBEdWlzIG5vbiBtYXVyaXMgbnVsbGEuIFNlZCBzb2xsaWNpdHVkaW4gbWFsZXN1YWRhIGVsZW1lbnR1bS4gRXRpYW0gZXUgdmVuZW5hdGlzIHVybmEuIFByYWVzZW50IGRhcGlidXMgYWxpcXVhbSBlZmZpY2l0dXIuDQoNClF1aXNxdWUgZmV1Z2lhdCBkaWFtIGV1IG1hbGVzdWFkYSB0ZW1wdXMuIERvbmVjIHF1aXMgdWxsYW1jb3JwZXIgZG9sb3IsIGluIGV1aXNtb2QgbWV0dXMuIER1aXMgdGluY2lkdW50IGVuaW0gdml0YWUgbW9sZXN0aWUgdGVtcHVzLiBNYWVjZW5hcyBjb252YWxsaXMgaWQgbmVxdWUgZ3JhdmlkYSBldWlzbW9kLiBDcmFzIGxpYmVybyBsZWN0dXMsIGVmZmljaXR1ciBldCB1bHRyaWNlcyBub24sIGdyYXZpZGEgcmhvbmN1cyBsb3JlbS4gVmVzdGlidWx1bSBhIG5lcXVlIHN1c2NpcGl0LCBwb3J0YSBhcmN1IHZlbCwgdWx0cmljaWVzIHRlbGx1cy4gQ3VyYWJpdHVyIHF1aXMgZG9sb3IgdGVtcG9yLCBzb2xsaWNpdHVkaW4gbGVjdHVzIGVmZmljaXR1ciwgdGVtcG9yIGxlY3R1cy4gTnVsbGFtIGN1cnN1cyBkaWN0dW0gb2Rpby4gRG9uZWMgaW4gcHVsdmluYXIganVzdG8sIGFjIGVsZWlmZW5kIGFudGUuIEZ1c2NlIHRyaXN0aXF1ZSBtYXhpbXVzIGR1aSBwb3N1ZXJlIGJpYmVuZHVtLiBWZXN0aWJ1bHVtIHNpdCBhbWV0IG51bmMgc2l0IGFtZXQgbmlzbCBkaWN0dW0gZnJpbmdpbGxhIGlkIG9ybmFyZSBxdWFtLiBWaXZhbXVzIHV0IGNvbmRpbWVudHVtIG1hc3NhLCBldCBlZmZpY2l0dXIgZXJhdC4gVmVzdGlidWx1bSB2YXJpdXMgZnJpbmdpbGxhIHRlbGx1cywgaWQgYWxpcXVldCBlc3QgcGhhcmV0cmEgbmVjLiBGdXNjZSBub24gbmVxdWUgYWNjdW1zYW4gZW5pbSBoZW5kcmVyaXQgcHVsdmluYXIgaWQgZXQgbGliZXJvLiBNb3JiaSBzaXQgYW1ldCBsZWN0dXMgdXQgbWFzc2EgcG9ydHRpdG9yIGRhcGlidXMuDQoNCkluIGRpYW0gZGlhbSwgY29udmFsbGlzIHF1aXMgdG9ydG9yIHZlbCwgYmxhbmRpdCBzY2VsZXJpc3F1ZSBkb2xvci4gT3JjaSB2YXJpdXMgbmF0b3F1ZSBwZW5hdGlidXMgZXQgbWFnbmlzIGRpcyBwYXJ0dXJpZW50IG1vbnRlcywgbmFzY2V0dXIgcmlkaWN1bHVzIG11cy4gVXQgYmxhbmRpdCB2aXRhZSBtZXR1cyBldSBpbXBlcmRpZXQuIERvbmVjIG5lYyB2ZWxpdCBkb2xvci4gVXQgbmVjIGNvbnNlcXVhdCBkcyBwZWxsZW50ZXNxdWUuIEN1cmFiaXR1ciB2ZWhpY3VsYSBsb3JlbSBmcmluZ2lsbGEgcXVhbSBkYXBpYnVzLCBlZ2V0IGVnZXN0YXMgcmlzdXMgdWxsYW1jb3JwZXIuIFZpdmFtdXMgcHVsdmluYXIgbWF0dGlzIGxhY3VzIGluIGJpYmVuZHVtLiBTdXNwZW5kaXNzZSBjb25zZWN0ZXR1ciwgZXggdml0YWUgdmVoaWN1IG1vbGVzdGllIGV1aXNtb2QgbGlndWxhLiBQcmFlc2VudCBzYWdpdHRpcyBleCB2ZWwgY29tbW9kbyBjb25zZXF1YXQuIE51bmMgdmVzdGlidWx1bSBuZWMgZW5pbSBlZ2V0IHBvcnR0aXRvci4NCg0KTWF1cmlzIHV0IGZlcm1lbnR1bSBsZWN0dXMuIE1hdXJpcyBtYXR0aXMgdHVycGlzIHJpc3VzLCB1dCBjb25kaW1lbnR1bSBsYWN1cyBwaGFyZXRyYSBhLiBGdXNjZSBsZWN0dXMgbWksIHByZXRpdW0gYXQgbWF4aW11cyBzZWQsIHBvc3VlcmUgcXVpcyBkb2xvci4gVXQgZWdldCBtYXVyaXMgZGljdHVtLCBlbGVpZmVuZCBlcmF0IGFjLCB0ZW1wdXMgYXJjdS4gQWxpcXVhbSBtYXNzYSBlbmltLCBzYWdpdHRpcyBzaXQgYW1ldCBtYXR0aXMgYWMsIGRpY3R1bSBpbiBzZW0uIE51bGxhIG1vbGxpcywgZXJvcyBub24gc2FnaXR0aXMgaGVuZHJlcml0LCB0b3J0b3IgZW5pbSBtb2xlc3RpZSBlcm9zLCBldSB0ZW1wdXMgb2RpbyBsaWd1bGEgbm9uIGxpYmVyby4gTWFlY2VuYXMgaWQgbG9yZW0gcmhvbmN1cywgdGluY2lkdW50IGxhY3VzIG5lYywgdWx0cmljc3QgdnVscHV0YXRlIHZpdmVycmEuIENsYXNzIGFwdGVudCB0YWNpdGkgc29jaW9zcXUgYWQgbGl0b3JhIHRvcnF1ZW50IHBlciBjb251YmlhIG5vc3RyYSwgcGVyIGluY2VwdG9zIGhpbWVuYWVvcy4gQWVuZWFuIHBoYXJldHJhLCBuaWJoIGV0IHZvbHV0cGF0IHJ1dHJ1bSwgdGVsbHVzIG5pYmggZWxlaWZlbmQgYXVndWUsIHNpdCBhbWV0IG1hbGVzdWFkYSBlcmF0IGFudGUgbm9uIGxpYmVyby4gQ3VyYWJpdHVyIHJpc3VzIGR1aSwgdmVoaWN1bGEgc2VkIGxvYm9ydGlzIG5lYywgY29uZGltZW50dW0gdXQgZXJvcy4gVml2YW11YWN1bGlzIHNlbSBlbGl0LCBhdCBkYXBpYnVzIGp1c3RvIHNhZ2l0dGlzIGFjLiBJbiBmaW5pYnVzIHRvcnRvciBzaXQgYW1ldCBwb3N1ZXJlIGdyYXZpZGEuIFZpdmFtdXMgZWdldCBlc3QgYXQgZW5pbSBtYWxlc3VhZGEgYmxhbmRpdC4gQWxpcXVhbSBzZW1wZXIgYmxhbmRpdCBlbmltLCB1dCBwb3J0dGl0b3IgbGVvIGN1cnN1cyBhYy4gTmFtIGp1c3RvIGxvcmVtLCBzYWdpdHRpcyBldCBhbnRlIHBlbGxlbnRlc3F1ZSwgdnVscHV0YXRlIG1heGltdXMgdHVycGlzLiBEb25lYyB2YXJpdXMgZWdlc3RhcyBzZW0sIGEgbW9sZXN0aWUgbmVxdWUgZWxlaWZlbmQgZXQuIEZ1c2NlIHF1aXMgc2VtIHNlbXBlciBlbmltIGRpY3R1bSBzb2xsaWNpdHVkaW4gcXVpcyBub24gbWF1cmlzLiBQcmFlc2VudCBkb2xvciBtYXNzYSwgY29tbW9kbyBldCBtYXVyaXMgcXVpcywgZXVpc21vZCBlZmZpY2l0dXIgcmlzdXMuDQoNCkluIGZpbmlidXMgbWFsZXN1YWRhIHR1cnBpcyBldCBlbGVpZmVuZC4gU2VkIG1hZ25hIGRpYW0sIHBsYWNlcmF0IGEgcG9ydGEgcXVpcywgY29udmFsbGlzIGluIHNhcGllbi4gTWF1cmlzIGFjIGVyb3MgYSBkb2xvciBhbGlxdWFtIHBvc3VlcmUgbmVjIGF0IGRvbG9yLiBNYWVjZW5hcyBvcm5hcmUgbWkgdml0YWUgdG9ydG9yIGJpYmVuZHVtIGF1Y3Rvci4gTmFtIGVnZXQgbGVvIHV0IG9kaW8gb3JuYXJlIGNvbmd1ZSBpZCB1dCB1cm5hLiBOdWxsYW0gdmVsIGFsaXF1YW0gbWFnbmEuIFN1c3BlbmRpc3NlIHBvdGVudGkuIE1hdXJpcyBzY2VsZXJpc3F1ZSB0ZW1wb3IgZWdlc3Rhcy4gTmFtIGlhY3VsaXMgc2l0IGFtZXQgbmliaCBhIGFjY3Vtc2FuLiBTdXNwZW5kaXNzZSBxdWlzIGxpZ3VsYSBvcmNpLiBTZWQgYWMgaW1wZXJkaWV0IGVyb3MsIG5vbiBwb3J0dGl0b3IgZWxpdC4gU3VzcGVuZGlzc2UgcG90ZW50aS4gSW4gbWkgYXJjdSwgcGVsbGVudGVzcXVlIGV1IGVzdCB2aXRhZSwgdWxsYW1jb3JwZXIgcHVsdmluYXIgZXN0LiBDcmFzIGxlY3R1cyBqdXN0bywgcG9ydHRpdG9yIG5vbiBvZGlvIGVnZXQsIGFsaXF1YW0gc29kYWxlcyBtYWduYS4gSW4gcG9zdWVyZSBoZW5kcmVyaXQgbGlndWxhIGlkIGx1Y3R1cy4NCg0KRHVpcyBzZW1wZXIgbmlzbCBlZ2V0IHBvcnR0aXRvciBmYWNpbGlzaXMuIFBlbGxlbnRlc3F1ZSBhdCBuaXNsIHF1aXMgZXN0IHZlbmVuYXRpcyBzY2VsZXJpc3F1ZSBldSBlZ2V0IGVyb3MuIEN1cmFiaXR1ciBtYWduYSByaXN1cywgY29tbW9kbyBpZCBpYWN1bGlzIG5lYywgYWNjdW1zYW4gdml0YWUgZG9sb3IuIE51bGxhIGNvbmRpbWVudHVtIGxlY3R1cyByaXN1cywgZXUgdnVscHV0YXRlIGxpYmVybyBlbGVtZW50dW0gdml2ZXJyYS4gUXVpc3F1ZSBhbGlxdWFtIGxhY3VzIHF1aXMgbGVjdHVzIGVsZWlmZW5kIHBsYWNlcmF0LiBEb25lYyBydXRydW0gYWMgdXJuYSBxdWlzIHVsbGFtY29ycGVyLiBTZWQgaW4gdWx0cmljZXMgYXJjdSwgdml0YWUgcGxhY2VyYXQgZGlhbS4NCg0KTWF1cmlzIHBoYXJldHJhIGxvcmVtIGFsaXF1ZXQsIHZhcml1cyBuZXF1ZSBhYywgdml2ZXJyYSBuZXF1ZS4gQ3JhcyBldSB2dWxwdXMuIEludGVnZXIgcGVsbGVudGVzcXVlIGxvcmVtIHZlbGl0LiBWZXN0aWJ1bHVtIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzIG9yY2kgbHVjdHVzIGV0IHVsdHJpY2VzIHBvc3VlcmUgY3ViaWxpYSBjdXJhZTsgVmVzdGlidWx1bSBkaWduaXNzaW0gdWx0cmljZXMgbGFjdXMsIG5vbiBkaWduaXNzaW0gc2VtIGxhY2luaWEgYXQuIEFsaXF1YW0gZnJpbmdpbGxhLCBlcm9zIGV0IGFjY3Vtc2FuIG1hdHRpcywgbGVjdHVzIG5pc2wgdWxsYW1jb3JwZXIgc2FwaWVuLCBhdCBsdWN0dXMgbWV0dXMgbmliaCBuZWMgb3JjaS4gQWxpcXVhbSBmYWNpbGlzaXMsIGxhY3VzIGV0IHZlaGljdWxhIGFsaXF1YW0sIGxvcmVtIGRvbG9yIGNvbW1vZG8gb3JjaSwgZWdldCBlbGVtZW50dW0gbWFzc2EgbnVsbGEgbmVjIG9kaW8uIFF1aXNxdWUgZWdldCBlc3QgYWMgcHVydXMgYWNjdW1zYW4gbHVjdHVzLg0KDQpWaXZhbXVzIG51bmMgbGlndWxhLCBwcmV0aXVtIGV0IHRpbmNpZHVudCBub24sIHZ1bHB1dGF0ZSBuZWMgZXguIE9yY2kgdmFyaXVzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMsIG5hc2NldHVyIHJpZGljdWx1cyBtdXMuIFV0IG1ldHVzIHZlbGl0LCBwbGFjZXJhdCBzZWQgdHJpc3RpcXVlIHNlZCwgbGFjaW5pYSBub24gdG9ydG9yLiBOdW5jIGFsaXF1ZXQsIG1pIGV0IHN1c2NpcGl0IHRpbmNpZHVudCwgbGliZXJvIGxpYmVybyB1bGxhbWNvcnBlciBvZGlvLCBlZ2V0IHZvbHV0cGF0IG1ldHVzIHR1cnBpcyBldCBhcmN1LiBBbGlxdWFtIGVyYXQgdm9sdXRwYXQuIEV0aWFtIHZpdGFlIHNvZGFsZXMgbnVsbGEuIE1vcmJpIGNvbmd1ZSBmZWxpcyB2aXRhZSB2YXJpdXMgbW9sbGlzLiBEdWlzIHRlbXB1cyB2ZWxpdCBvZGlvLCBpZCBtYWxlc3VhZGEgbG9yZW0gaWFjdWxpcyBub24uIE51bmMgdGVtcG9yIGVsaXQgaW4gcHVydXMgZGlnbmlzc2ltLCBhdCByaG9uY3VzIHB1cnVzIHNvZGFsZXMuIFByYWVzZW50IHNlZCBmcmluZ2lsbGEgbnVsbGEsIHZpdGFlIHBvcnR0aXRvciBkb2xvci4gU2VkIGR1aSBxdWFtLCBzYWdpdHRpcyBhdCBsZWN0dXMgZXUsIHRlIGNvbmRpbWVudHVtIHRpbmNpZHVudC4gVXQgaW4gdmVsaXQgdHJpc3RpcXVlLCBmYWNpbGlzaXMgZXN0IHNlZCwgdmVoaWN1bGEgZXguIFZpdmFtdXMgYXVjdG9yIG51bmMgcXVpcyBmYWNpbGlzaXMgYWxpcXVhbS4NCg0KVmVzdGlidWx1bSBjb21tb2RvIGNvbnNlY3RldHVyIHB1cnVzIGF1Y3RvciB1bHRyaWNpZXMuIE1hZWNlbmFzIGNvbnZhbGxpcyB2YXJpdXMgYWxpcXVldC4gTWFlY2VuYXMgcmhvbmN1cyBydXRydW0gc2FwaWVuLCBxdWlzIHZlaGljdWxhIGxpZ3VsYS4gUXVpc3F1ZSBtb2xlc3RpZSBtaSBldCByaG9uY3VzIGNvbnNlY3RldHVyLiBNb3JiaSBmcmluZ2lsbGEgbmlzbCBvcmNpLCBhdCB2YXJpdXMgZHVpIHBvc3VlcmUgZXQuIEFsaXF1YW0gc2VtIGR1aSwgcmhvbmN1cyB2ZWwgbWkgZXQsIGRpZ25pc3NpbSBzYWdpdHRpcyBhdWd1ZS4gTnVsbGFtIHF1aXMgY29uZGltZW50dW0gYXVndWUuIEN1cmFiaXR1ciBldCBudW5jIG1hc3NhLiBJbiBzYXBpZW4gZXgsIHBoYXJldHJhIHZpdGFlIHJob25jdXMgZWdldCwgbW9sbGlzIGF0IGxlY3R1cy4gSW4gYSBhbnRlIHRlbXBvciwgbWF4aW11cyBlbGl0IGFjY3Vtc2FuLCB1bGxhbWNvcnBlciBuaXNsLiBOdWxsYSBjb25zZXF1YXQgbWV0dXMgZWdldCBlbGl0IGFsaXF1ZXQgY29uc2VxdWF0LiBOYW0gdmVsIGVmZmljaXR1ciBuaXNpLCBuZWMgY3Vyc3VzIGxpZ3VsYS4gQ3JhcyBpbXBlcmRpZXQgZXJhdCBsZW8sIHZvbHV0cGF0IGVmZmljaXR1ciBtYXNzYSBkYXBpYnVzIGEuIFByb2luIGVnZXN0YXMgcHVsdmluYXIgZWxlbWVudHVtLiBOdWxsYSBuZWMgZWxlbWVudHVtIG5pYmgsIG1vbGVzdGllIHZ1bHB1dGF0ZSB1cm5hLiBNYWVjZW5hcyBwcmV0aXVtIHVsdHJpY2llcyBtYXVyaXMsIGV0IHZhcml1cyBleCB0cmlzdGlxdWUgdGVtcHVzLg0KDQpVdCBwb3J0dGl0b3IgbnVuYyBhIHF1YW0gdmVoaWN1bGEgbWFsZXN1YWRhLiBTZWQgdmVsIGlhY3VsaXMgYXJjdS4gSW4gZWxlbWVudHVtLCBkdWkgcXVpcyBjdXJzdXMgb3JuYXJlLCBsZW8gYW50ZSBwdWx2aW5hciBtYXNzYSwgdXQgZmFjaWxpc2lzIGVuaW0gbGFjdXMgc2l0IGFtZXQgbGFjdXMuIER1aXMgbmVjIHVsdHJpY2VzIHNhcGllbiwgZWdldCBlbGVtZW50dW0gZmVsaXMuIFF1aXNxdWUgZmFjaWxpc2lzIG1vbGxpcyBlc3QsIGEgY29udmFsbGlzIG5pYmggY29uc2VjdGV0dXIgZXUuIFN1c3BlbmRpc3NlIHZlbCBuZXF1ZSBtYXVyaXMuIFNlZCB2ZWhpY3VsYSBlbmltIGV0IG9kaW8gdmVuZW5hdGlzLCB2ZWwgb3JuYXJlIGxpYmVybyBtYXhpbXVzLiBEb25lYyB2dWxwdXRhdGUgcHVydXMgaWQgdGVsbHVzIGFjY3Vtc2FuIHNjZWxlcmlzcXVlLiBDdXJhYml0dXIgc2l0IGFtZXQganVzdG8gdml0YWUgZWxpdCB2ZXN0aWJ1bHVtIGJsYW5kaXQuIFByb2luIGF0IGNvbmd1ZSBwdXJ1cywgdml2ZXJyYSBpbnRlcmR1bSBkb2xvci4NCg0KVmVzdGlidWx1bSBhdCB1bGxhbWNvcnBlciBkaWFtLCBlZ2V0IGNvbmd1ZSB2ZWxpdC4gTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gRnVzY2UgaWFjdWxpcyBldWlzbW9kIG1pLiBWZXN0aWJ1bHVtIG1vbGVzdGllIGxvYm9ydGlzIGFudGUuIE51bGxhbSBpbiBlcmF0IHBoYXJldHJhIGVyYXQgbGFjaW5pYSB2b2x1dHBhdC4gUGVsbGVudGVzcXVlIHF1YW0gbnVuYywgc29sbGljaXR1ZGluIGlkIGVsZWlmZW5kIG5vbiwgZWxlbWVudHVtIHF1aXMgdXJuYS4gQ3VyYWJpdHVyIGdyYXZpZGEgdmVsaXQgdmVsaXQsIG1vbGxpcyBkaWduaXNzaW0gYXVndWUgbW9sbGlzIGEuIER1aXMgbmVxdWUgb2RpbywgZmFjaWxpc2lzIGV0IGxvYm9ydGlzIHF1aXMsIGlhY3VsaXMgbmVjIHRlbGx1cy4gTmFtIGV1IGZpbmlidXMgbG9yZW0uIE1hZWNlbmFzIGVnZXN0YXMgZHVpIGEgbmlzbCBsdWN0dXMsIGF0IG1vbGVzdGllIHB1cnVzIHVsdHJpY2VzLiBWaXZhbXVzIHRpbmNpZHVudCBuZWMgb2RpbyB1dCB0cmlzdGlxdWUuIFZlc3RpYnVsdW0gdXQgbGFjaW5pYSBxdWFtLiBWaXZhbXVzIHB1bHZpbmFyIHVsdHJpY2llcyBwZWxsZW50ZXNxdWUuIERvbmVjIGV1aXNtb2QgaGVuZHJlcml0IG1hbGVzdWFkYS4gRG9uZWMgZmluaWJ1cyB2aXZlcnJhIHB1cnVzIHV0IHVsdHJpY2VzLiBOdWxsYW0gdWx0cmljaWVzIGRpaXQgYW1ldCwgbW9sbGlzIGFjIGxlY3R1cy4gTWFlY2VuYXMgcHJldGl1bSBtYXVyaXMgcXVpcyBsZWN0dXMgY29uc2VxdWF0LCBzZW1wZXIgZmFjaWxpc2lzIG1ldHVzIGFsaXF1YW0uIFN1c3BlbmRpc3NlIGJpYmVuZHVtIHN1c2NpcGl0IHNjZWxlcmlzcXVlLiBFdGlhbSBldSBleCB2YXJpdXMsIG9ybmFyZSBzZW0gaWQsIHVsdHJpY2VzIG9kaW8uIEV0aWFtIHZlc3RpYnVsdW0sIG1hdXJpcyBpbiBsb2JvcnRpcyBhbGlxdWV0LCBsZWN0dXMgZmVsaXMgcnV0cnVtIGRvbG9yLCBhdCBzZW1wZXIgbmliaCBleCBuZWMgZmVsaXMuIER1aXMgc29kYWxlcyBpcHN1bSBpZCB2aXZlcnJhIGNvbnNlcXVhdC4gU3VzcGVuZGlzc2UgYWNjdW1zYW4gdXJuYSBsaWd1bGEsIHZlbCB0ZW1wb3IgbWFnbmEgdmVuZW5hdGlzIGV0LiBNYXVyaXMgZWdldCBzY2VsZXJpc3F1ZSBqdXN0by4gQWVuZWFuIGFjY3Vtc2FuIHVsbGFtY29ycGVyIHVybmEgdml0YWUgZmFjaWxpc2lzLiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBQcm9pbiBsYWNpbmlhIG1ldHVzIHRvcnRvciwgdmVsIG1vbGxpcyBlbGl0IGNvbnNlY3RldHVyIHF1aXMuIFBoYXNlbGx1cyB2ZWxpdCBkb2xvciwgZXVpc21vZCBlZ2V0IHBsYWNlcmF0IGV1LCBtb2xsdXRwYXQgcXVpcy4gVmVzdGlidWx1bSBpZCBsYWNpbmlhIG1ldHVzLiBEb25lYyBxdWlzIHNlbSBqdXN0by4gTnVsbGFtIGxhb3JlZXQgbmlzaSBpbiBtZXR1cyBkYXBpYnVzLCBldSB2b2x1dHBhdCBlbGl0IGNvbnZhbGxpcy4gUHJhZXNlbnQgZXUgdml2ZXJyYSBlbmltLiBGdXNjZSBydXRydW0sIGRpYW0gZXUgZmFjaWxpc2lzIHRyaXN0aXF1ZSwgdXJuYSBhbnRlIHRpbmNpZHVudCBsb3JlbSwgYSBsb2JvcnRpcyBlbGl0IGVyYXQgaWQgbG9yZW0uIFZlc3RpYnVsdW0gYWMgbnVsbGEgc2VkIGFyY3UgdmVoaWN1bGEgdWxsYW1jb3JwZXIuIFNlZCB1dCB1bHRyaWNlcyBtYXVyaXMuIFBlbGxlbnRlc3F1ZSBhYyBsZWN0dXMgZWdldCBsb3JlbSBhbGlxdWFtIGVmZmljaXR1ci4gTmFtIG5vbiBvZGlvIGF0IGVzdCB2dWxwdXRhdGUgdWx0cmljZXMuDQoNClZlc3RpYnVsdW0gdm9sdXRwYXQgcXVhbSByaG9uY3VzIHRlbXB1cyBpbXBlcmRpZXQuIE51bmMgYXVjdG9yIGxlY3R1cyBzaXQgYW1ldCBzY2VsZXJpc3F1ZSBsYWNpbmlhLiBJbiBmaW5pYnVzIG1hZ25hIGV0IHZvbHV0cGF0IGNvbnZhbGxpcy4gRHVpcyBlbGl0IGR1aSwgYWxpcXVhbSBzZWQgbG9yZW0gdml0YWUsIGRhcGlidXMgZGFwaWJ1cyBzZW0uIFByYWVzZW50IHRvcnRvciB0dXJwaXMsIHNlbXBlciB1dCBjb25ndWUgc2VkLCB2ZW5lbmF0aXMgdXQgbnVuYy4gTWF1cmlzIGVsZWlmZW5kIHR1cnBpcyB2ZWxpdCwgc2l0IGFtZXQgZGljdHVtIG1pIGhlbmRyZXJpdCB1dC4gUGVsbGVudGVzcXVlIGhhYml0YW50IG1vcmJpIHRyaXN0aXF1ZSBzZW5lY3R1cyBldCBuZXR1cyBldCBtYWxlc3VhZGEgZmFtZXMgYWMgdHVycGlzIGVnZXN0YXMuIERvbmVjIHRpbmNpZHVudCBsZWN0dXMgbm9uIHRyaXN0aXF1ZSB2ZW5lbmF0aXMuIFNlZCB0ZW1wb3IgaWQgbGVvIHNlZCBjb25ndWUuIFNlZCBlbmltIGZlbGlzLCBlZ2VzdGFzIHF1aXMgbWkgbGFjaW5pYSwgYmxhbmRpdCBlbGVpZmVuZCBqdXN0by4gVml2YW11cyBsdWN0dXMgc2VtIG1hbGVzdWFkYSBwdWx2aW5hciBmcmluZ2lsbGEuIEluIG51bGxhIG5lcXVlLCBmZXVnaWF0IHZlbCBkaWN0dW0gYSwgZWxlbWVudHVtIHNlZCBpcHN1bS4NCg0KQWxpcXVhbSBlcmF0IHZvbHV0cGF0LiBJbnRlZ2VyIG5lYyBtYWduYSB1bGxhbWNvcnBlciwgdGluY2lkdW50IGFudGUgc2l0IGFtZXQsIGF1Y3RvciBuaWJoLiBQcmFlc2VudCBwb3J0YSBzYXBpZW4gYWNjdW1zYW4ganVzdG8gdGVtcHVzLCBlZ2V0IGZldWdpYXQgYW50ZSBjb252YWxsaXMuIER1aXMgcG9zdWVyZSBjb25kaW1lbnR1bSBmZXJtZW50dW0uIE51bGxhIGZhY2lsaXNpLiBOdWxsYW0gdHVycGlzIG5pc2wsIHBvc3VlcmUgZXUgcXVhbSBldSwgbWF0dGlzIHRpbmNpZHVudCBuaXNsLiBDcmFzIGV0IHNhcGllbiBpZCBvZGlvIHNvZGFsZXMgbGFvcmVldCBuZWMgcXVpcyBzZW0uDQoNCkV0aWFtIG5vbiBvcmNpIHNpdCBhbWV0IGxpYmVybyBwb3N1ZXJlIHJob25jdXMgdmVsIGV1IGlwc3VtLiBDdXJhYml0dXIgZmFjaWxpc2lzIG5pYmggZWdldCBuZXF1ZSBncmF2aWRhLCBldSB2ZXN0aWJ1bHVtIG9yY2kgZGlnbmlzc2ltLiBTZWQgbW9sZXN0aWUgbWFzc2EgdXQgbGFjdXMgZWxlaWZlbmQgY29uc2VjdGV0dXIuIFNlZCBncmF2aWRhIHJpc3VzIHZlbCBlc3QgZXVpc21vZCwgdmVsIHNvZGFsZXMgbnVsbGEgYmxhbmRpdC4gQWVuZWFuIG5vbiBvcm5hcmUgdXJuYSwgYWMgY29uZGltZW50dW0gZmVsaXMuIEV0aWFtIGRpY3R1bSBpcHN1bSBldCBuaXNsIGVsZWlmZW5kIGVsZW1lbnR1bS4gRHVpcyBzaXQgYW1ldCB0aW5jaWR1bnQgdXJuYSwgZWdldCBkYXBpYnVzIG1hZ25hLiBWaXZhbXVzIHVsbGFtY29ycGVyIGZlbGlzIHZpdGFlIG5pc2kgZWdlc3RhcywgYXQgZmFjaWxpc2lzIG5pc2kgdGVtcHVzLiBQaGFzZWxsdXMgZXUgZGlhbSB2aXRhZSBhdWd1ZSB1bHRyaWNlcyBwb3J0dGl0b3IuDQoNCkludGVnZXIgYXQgdHJpc3RpcXVlIGFuaXR0aXMgcHVydXMgbmVjIGxpZ3VsYSBtYWxlc3VhZGEgcG9ydGEuIE51bmMgbnVsbGEgbmlzaSwgcHVsdmluYXIgbm9uIHR1cnBpcyB2ZWwsIHZhcml1cyBlZ2VzdGFzIGVsaXQuIEluIG5vbiBwb3J0YSB0dXJwbmRyZXJpdCBpbi4gSW50ZWdlciBzaXQgYW1ldCBuaWJoIGVuaW0uDQoNCk1vcmJpIGNvbmd1ZSBqdXN0byBldSB1cm5hIGNvbmRpbWVudHVtLCB2aXRhZSBzdXNjaXBpdCB0dXJwaXMgdGVtcG9yLiBOdWxsYSBjb252YWxsaXMgY29uc2VjdGV0dXIgbmlzbCBpZCBkYXBpYnVzLiBDcmFzIGZpbmlidXMgdmVuZW5hdGlzIGVyYXQsIGEgc2FnaXR0aXMgbGVvIGNvbnNlcXVhdCBlZ2V0LiBNb3JiaSB2aXZlcnJhIHZlaGljdWxhIHZlbGl0LCBhYyBzdXNjaXBpdCByaXN1cyBzYWdpdHRpcyB1dC4gQ3JhcyBldCBlbGl0IGF0IGVyb3MgY3Vyc3VzIHZlbmVuYXRpcy4gTnVsbGFtIGxpZ3VsYSBwdXJ1cywgYmxhbmRpdCBzaXQgYW1ldCBibGFuZGl0IGluLCBwbGFjZXJhdCBhdCB0b3J0b3IuIE1hdXJpcyBjdXJzdXMgYXQgdmVsaXQgYSBwbGFjZXJhdC4gUHJhZXNlbnQgYSBldWlzbW9kIGVyYXQsIGEgbWFsZXN1YWRhIHF1YW0uIE51bmMgdml0YWUgbnVsbGEgZXN0LiBOdWxsYSBmYWNpbGlzaS4gSW4gaGFjIGhhYml0YXNzZSBwbGF0ZWEgZGljdHVtc3QuIE51bGxhIGV1IHN1c2NpcGl0IHNhcGllbiwgbm9uIHN1c2NpcGl0IHVybmEuIFN1c3BlbmRpc3NlIHNlZCBjb25zZXF1YXQgbGlndWxhLiBVdCBub24gY29uc2VxdWF0IGxvcmVtLCBuZWMgYWxpcXVldCBvcmNpLiBQZWxsZW50ZXNxdWUgY29tbW9kbyBpcHN1bSBpZCBtaSBtYXhpbXVzLCBpZCBzb2xsaWNpdHVkaW4gZW5pbSBzdXNjaXBpdC4gTmFtIGVnZXQgdHVycGlzIGF0IG1pIHBvcnRhIHB1bHZpbmFyLg0KDQpDdXJhYml0dXIgZWdldCBuaWJoIHRpbmNpZHVudCwgdnVscHV0YXRlIG5lcXVlIGV1LCB2ZXN0aWJ1bHVtIHB1cnVzLiBOdWxsYSBmYWNpbGlzaS4gVXQgc2NlbGVyaXNxdWUsIG1pIHF1aXMgcmhvbmN1cyBkaWduaXNzaW0sIG5pYmggaXBzdW0gZGFwaWJ1cyBlbGl0LCBldCBjb252YWxsaXMgYXVndWUgcHVydXMgZXQgYXJjdS4gTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gT3JjaSB2YXJpdXMgbmF0b3F1ZSBwZW5hdGlidXMgZXQgbWFnbmlzIGRpcyBwYXJ0dXJpZW50IG1vbnRlcywgbmFzY2V0dXIgcmlkaWN1bHVzIG11cy4gQ3JhcyBkaWFtIGR1aSwgdGVtcHVzIGVnZXQgZG9sb3Igbm9uLCB0aW5jaWR1bnQgcGhhcmV0cmEgZXJvcy4gUXVpc3F1ZSBhdCBoZW5kcmVyaXQgYW50ZSwgZWdldCBmYWNpbGlzaXMgaXBzdW0uIFV0IHZlc3RpYnVsdW0gZXN0IHNlZCBmZWxpcyBvcm5hcmUgcGxhY2VyYXQuIE1vcmJpIHNvZGFsZXMgZ3JhdmlkYSBlbGl0LCBlZ2V0IHN1c2NpcGl0IHRlbGx1cyBhbGlxdWV0IGVmZmljaXR1ci4gUHJvaW4gdmVsIGNvbW1vZG8gbGlndWxhLiBJbiBoYWMgaGFiaXRhc3NlIHBsYXRlYSBkaWN0dW1zdC4gTW9yYmkgaWQgdmVuZW5hdGlzIHRvcnRvciwgaWQgbGFvcmVldCBxdWFtLiBGdXNjZSB2aXRhZSBjb25zZXF1YXQgdmVsaXQuIFV0IHV0IHJob25jdXMgZmVsaXMuDQoNCkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIEFsaXF1YW0gYSBuaWJoIGdyYXZpZGEgbWF1cmlzIHVsbGFtY29ycGVyIGVsZW1lbnR1bS4gSW4gcG9ydGEgZmVsaXMgZ3JhdmlkYSwgZGFwaWJ1cyBsYWN1cyBpbiwgdnVscHV0YXRlIGZlbGlzLiBJbnRlZ2VyIGV1IGNvbW1vZG8gbmlzaS4gSW4gc29sbGljaXR1ZGluIGVmZmljaXR1ciBvZGlvIGFjIHRyaXN0aXF1ZS4gRHVpcyBlbGVtZW50dW0gY29uZ3VlIGxlby4gU3VzcGVuZGlzc2UgZXUgZHVpIGF0IGR1aSBjb25kaW1lbnR1bSBwb3J0dGl0b3IuIER1aXMgcGhhcmV0cmEgbW9sZXN0aWUgZXVpc21vZC4gQ3VyYWJpdHVyIHNpdCBhbWV0IG9yY2kgdXQgZXggdWxsYW1jb3JwZXIgZGFwaWJ1cy4gVml2YW11cyBjb252YWxsaXMgZXQgbmVxdWUgdXQgbW9sZXN0aWUuIFV0IHJpc3VzIGxvcmVtLCBpbnRlcmR1bSB0aW5jaWR1bnQgdHVycGlzIGluLCBjb25kaW1lbnR1bSBzZW1wZXIgc2VtLiBTZWQgdmFyaXVzIG1hc3NhIGV1IHJpc3VzIHNvZGFsZXMsIHNpdCBhbWV0IG1heGltdXMgbmlzaSBzdXNjaXBpdC4gVmVzdGlidWx1bSBzb2xsaWNpdHVkaW4gc2NlbGVyaXNxdWUgbG9yZW0gc2VtcGVyIGRhcGlidXMuIEN1cmFiaXR1ciB2ZWxpdCBkaWFtLCBwb3J0YSBldSB2ZWxpdCBlZ2V0LCBjb252YWxsaXMgYWxpcXVhbSBzYXBpZW4uDQoNCkZ1c2NlIHNvbGxpY2l0dWRpbiBvZGlvIHNlZCBjb25ndWUgZmVybWVudHVtLiBNYXVyaXMgcHVsdmluYXIgcGVsbGVudGVzcXVlIHJpc3VzLCBuZWMgZXVpYWdpdHRpcy4gRG9uZWMgbGVvIHNhcGllbiwgdGVtcHVzIGlkIHVsdHJpY2VzIG5vbiwgYWxpcXVhbSBpbiB0dXJwaXMuIE51bmMgYmliZW5kdW0gZGljdHVtIGxlbywgcXVpcyB1bGxhbWNvcnBlciBtYXNzYS4gSW50ZWdlciBzZWQgZXggdXQgbmVxdWUgc2VtcGVyIHRlbXB1cyBzZWQgYSBpcHN1bS4gTW9yYmkgc2l0IGFtZXQgYXJjdSBkaWN0dW0sIHBvcnRhIHB1cnVzIGV0LCByaG9uY3VzIGFyY3UuIE51bGxhbSBhY2N1bXNhbiBlbGVtZW50dW0gaXBzdW0sIGlkIGlhY3VsaXMgbWFzc2Egb3JuYXJlIHNlZC4gUGhhc2VsbHVzIHJob25jdXMgb3JuYXJlIGV4IGEgdHJpc3RpcXVlLiBEdWlzIHZpdmVycmEsIGVyb3MgcXVpcyBydXRydW0gaW50ZXJkdW0sIGxvcmVtIHNhcGllbiBwZWxsZW50ZXNxdWUgYW50ZSwgYXQgdHJpc3RpcXVlIG1pIGRpYW0gZXQgZXguDQoNCk5hbSB0aW5jaWR1bnQgZGljdHVtIGFjY3Vtc2FuLiBQcmFlc2VudCBzb2xsaWNpdHVkaW4gc29kYWxlcyBkb2xvciwgc2l0IGFtZXQgcGhhcmV0cmEgYXJjdSBzY2VsZXJpc3F1ZSBhLiBTdXNwZW5kaXNzZSBwb3RlbnRpLiBWZXN0aWJ1bHVtIGlkIGVyb3Mgdml2ZXJyYSBudWxsYSBhdWN0b3IgYXVjdG9yLiBOYW0gbWkgbmVxdWUsIHNvZGFsZXMgZXQgdGluY2lkdW50IHV0LCBsYWNpbmlhIGFjIHNlbS4gRXRpYW0gY29uc2VxdWF0IGVyb3MgdXJuYSwgbm9uIGZldWdpYXQgdmVsaXQgZWdlc3RhcyBhdC4gU3VzcGVuZGlzc2UgdGVtcHVzLCBlcmF0IGluIGx1Y3R1cyBzdXNjaXBpdCwgdHVycGlzIGlwc3VtIGx1Y3R1cyBuaXNsLCBxdWlzIGZyaW5naWxsYSBuaXNpIG1ldHVzIG5lYyBuaXNpLiBJbiBtYXNzYSBzZW0sIHBvcnRhIHNhZ2l0dGlzIHNjZWxlcmlzcXVlIGluLCBsYW9yZWV0IG5lYyBlc3QuIFNlZCBzZWQgbWF1cmlzIGF1Z3VlLiBEdWlzIHZlbmVuYXRpcywgYXVndWUgdmVsIGJpYmVuZHVtIGF1Y3RvciwgbWF1cmlzIHRlbGx1cyBwb3J0dGl0b3IgaXBzdW0sIGV1IGZlcm1lbnR1bSBtYWduYSBhdWd1ZSBpbiB2ZWxpdC4gQ3VyYWJpdHVyIGF0IGNvbnNlcXVhdCBlbGl0LCBuZWMgcmhvbmN1cyBleC4gUXVpc3F1ZSB2ZWhpY3VsYSBsYW9yZWV0IGRpYW0gYSBpbXBlcmRpZXQuIFBoYXNlbGx1cyBxdWlzIGxhY3VzIHNlbXBlciwgc3VzY2lwaXQgdHVycGlzIG5vbiwgZGlnbmlzc2ltIG1hc3NhLg0KDQpNYWVjZW5hcyBwaGFyZXRyYSBsZWN0dXMgdmVsaXQsIHV0IGxvYm9ydGlzIG1hc3NhIHZlc3RpYnVsdW0gYWMuIFBoYXNlbGx1cyB2ZW5lbmF0aXMgbGFjdXMgbWksIHNpdCBhbWV0IGZhY2lsaXNpcyBhbnRlIGNvbnNlcXVhdCBsYW9yZWV0LiBVdCByaG9uY3VzIGV4IGFyY3UsIGVnZXQgY29tbW9kbyBhbnRlIGZyaW5naWxsYSB1dC4gRXRpYW0gZXQgZXN0IG5pc2kuIENyYXMgbnVsbGEgdG9ydG9yLCBzb2RhbGVzIHZpdGFlIHVybmEgYSwgc29sbGljaXR1ZGluIHRpbmNpZHVudCBlbmltLiBOdW5jIGVsZWlmZW5kLCBsaWd1bGEgdXQgcGhhcmV0cmEgcG9ydGEsIGlkIGF1Z3VlIGVnZXQgZXJvcyBibGFuZGl0IGV1aXNtb2Qgc2l0IGFtZXQgbm9uIG1pLiBJbiBjb25zZXF1YXQgZmFjaWxpc2lzIHN1c2NpcGl0LiBNYWVjZW5hcyB1dCBuaXNsIG1hdHRpcywgbGFvcmVldCBuZXF1ZSBwZWxsZW50ZXNxdWUsIGZhdWNpYnVzIG5lcXVlLiBTZWQgcG9zdWVyZSBtaSBhdCBhbnRlIHBvcnRhLCBhIGZyaW5naWxsYSBpcHN1bSBydXRydW0uIFF1aXNxdWUgZXUgdHVycGlzIGFsaXF1ZXQsIHNvZGFsZXMgYXJjdSBibGFuZGl0LCBpYWN1bGlzIHR1cnBpcy4gTmFtIG51bGxhIGp1c3RvLCBzY2VsZXJpc3F1ZSBlZ2V0IHBlbGxlbnRlc3F1ZSBxdWlzLCBwbGFjZXJhdCB2aXRhZSBuaXNsLiBNYXVyaXMgdmVzdGlidWx1bSBtb2xlc3RpZSBtYXVyaXMsIHZpdGFlIHRpbmNpZHVudCBxdWFtIGZhdWNpYnVzIG5vbi4gQWxpcXVhbSBhIGF1Z3VlIGVnZXQgb3JjaSB2b2x1dHBhdCBpbXBlcmRpZXQgcXVpcyBjb252YWxsaXMgdG9ydG9yLg0KDQpDdXJhYml0dXIgZXUgcXVhbSBleC4gU2VkIHRlbXBvciBtaSBxdWlzIHR1cnBpcyBlbGVtZW50dW0gbGFjaW5pYS4gVXQgZXUgZXN0IHBsYWNlcmF0LCB2b2x1dHBhdCBuaWJoIHNlZCwgdm9sdXJhYml0dXIgcGhhcmV0cmEsIGlwc3VtIHF1aXMgaGVuZHJlcml0IGZlcm1lbnR1bSwgbmliaCBlbmltIHBvc3VlcmUgbmlzbCwgbmVjIGRpY3R1bSBzZW0gZW5pbSBlbGVpZmVuZCB2ZWxpdC4gTW9yYmkgc29kYWxlcyBzYWdpdHRpcyBsZW8uIFZpdmFtdXMgYWMgcHVydXMgcXVpcyBuaXNpIG1vbGVzdGllIG1hdHRpcyBpbiBxdWlzIGVyb3MuIFBoYXNlbGx1cyBldWlzbW9kIHRvcnRvciBxdWlzIGRvbG9yIGNvbW1vZG8gY29uc2VjdGV0dXIuIFZlc3RpYnVsdW0gZmluaWJ1cyBmZWxpcyBldSBtaSB2ZW5lbmF0aXMgdHJpc3RpcXVlLg0KDQpQaGFzZWxsdXMgZWxlbWVudHVtIHNlbSBudWxsYSwgaWQgdm9sdXRwYXQgb2RpbyB0cmlzdGlxdWUgYS4gUGhhc2VsbHVzIHNpdCBhbWV0IGxlY3R1cyBub24gbGlndWxhIG1hbGVzdWFkYSBlZ2VzdGFzLiBQcmFlc2VudCBtYXhpbXVzIHF1aXMgbmlzbCB2ZWwgZGFwaWJ1cy4gRHVpcyBsaWJlcm8gZW5pbSwgYWxpcXVhbSBwZWxsZW50ZXNxdWUgZXJvcyBpbiwgcHJldGl1bSBmZXJtZW50dW0gaXBzdW0uIERvbmVjIHNvbGxpY2l0dWRpbiBhdWN0b3IgcG9ydGEuIFBlbGxlbnRlc3F1ZSBpcHN1bSBsaWJlcm8sIHNvbGxpY2l0dWRpbiBuZWMgbG9yZW0gaWQsIGltcGVyZGlldCBwcmV0aXVtIGVsaXQuIEludGVnZXIgbmVjIGxlbyBkdWkuIFZpdmFtdXMgY3Vyc3VzIGxlbyBub24gYXVndWUgc2FnaXR0aXMgc29kYWxlcy4gSW4gcGVsbGVudGVzcXVlIGVmZmljaXR1ciBzYXBpZW4gYSB2b2x1dHBhdC4gRG9uZWMgbWFnbmEgbWFnbmEsIG1hdHRpcyBpZCBvZGlvIG5vbiwgZWxlaWZlbmQgcG9ydHRpdG9yIG5lcXVlLiBQcmFlc2VudCBoZW5kcmVyaXQsIG5pc2kgZ3JhdmlkYSBmZXJtZW50dW0gdHJpc3RpcXVlLCBqdXN0byBkb2xvciBmYXVjaWJ1cyBpcHN1bSwgcXVpcyBiaWJlbmR1bSBxdWFtIHB1cnVzIGV1IHJpc3VzLiBTdXNwZW5kaXNzZSBwb3RlbnRpLiBTZWQgcHJldGl1bSBjb25zZXF1YXQgZGljdHVtLiBOdWxsYW0gY29uc2VxdWF0IGVmZmljaXR1ciBtYXhpbXVzLg0KDQpQaGFzZWxsdXMgc2NlbGVyaXNxdWUgbGFjdXMgZWdldCBkb2xvciBwZWxsZW50ZXNxdWUgY29uZGltZW50dW0uIFBoYXNlbGx1cyBmcmluZ2lsbGEgcXVhbSBpZCBlbmltIGx1Y3R1cyBwcmV0aXVtLiBQcm9pbiBwZWxsZW50ZXNxdWUgZXUgbG9yZW0gZXUgdWxsYW1jb3JwZXIuIE51bmMgbGFjdXMgaXBzdW0sIGNvbnZhbGxpcyBpbiBtYWduYSBpZCwgbW9sZXN0aWUgaWFjdWxpcyBkdWkuIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIE51bGxhIHF1aXMgbmlzaSBhcmN1LiBEb25lYyBsaWd1bGEgZmVsaXMsIHN1c2NpcGl0IGlkIG51bGxhIG5vbiwgY3Vyc3VzIGNvbmd1ZSBtYXVyaXMuIFNlZCB0b3J0b3IgbGFjdXMsIGFsaXF1YW0gZWdldCBtYXNzYSBuZWMsIG1heGltdXMgZWxlbWVudHVtIGp1c3RvLg0KDQpDbGFzcyBhcHRlbnQgdGFjaXRpIHNvY2lvc3F1IGFkIGxpdG9yYSB0b3JxdWVudCBwZXIgY29udWJpYSBub3N0cmEsIHBlciBpbmNlcHRvcyBoaW1lbmFlb3MuIE9yY2kgdmFyaXVzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMsIG5hc2NldHVyIHJpZGljdWx1cyBtdXMuIFN1c3BlbmRpc3NlIHV0IHNlbSBxdWFtLiBNb3JiaSB1bGxhbWNvcnBlciBsb3JlbSBtYXVyaXMsIGlkIHRyaXN0aXF1ZSBsaWd1bGEgcGhhcmV0cmEgZXUuIERvbmVjIGZldWdpYXQsIGxlbyBub24gaW50ZXJkdW0gYWNjdW1zYW4sIGRvbG9yIG1pIGxvYm9ydGlzIGxlbywgc2l0IGFtZXQgbWF0dGlzIG9kaW8gbnVuYyBldSBleC4gU2VkIHZpdGFlIG51bmMgZW5pbS4gU3VzcGVuZGlzc2UgdnVscHV0YXRlIGZyaW5naWxsYSBlcmF0LCB2ZWwgdWx0cmljaWVzIGVzdCBsb2JvcnRpcyB2aXRhZS4gUHJvaW4gYWMgbGVvIGluIGxhY3VzIHJob25jdXMgc2NlbGVyaXNxdWUgZWdldCBzaXQgYW1ldCB0ZWxsdXMuIEN1cmFiaXR1ciBsYW9yZWV0IHBlbGxlbnRlc3F1ZSBlcm9zLCBzaXQgYW1ldCBzb2xsaWNpdHVkaW4gZXJvcyB0ZW1wb3IgdWxsYW1jb3JwZXIuIFV0IGlkIGFjY3Vtc2FuIGVyb3MuIE1hdXJpcyBjb25zZXF1YXQsIGp1c3RvIGluIHJ1dHJ1bSBjdXJzdXMsIGxpZ3VsYSBkdWkgdGVtcHVzIG9kaW8sIHZlbCBmYXVjaWJ1cyBhbnRlIGxpZ3VsYSBhIGV4LiBDcmFzIHZlc3RpYnVsdW0gZmluaWJ1cyBtYWduYSwgc2VkIGhlbmRyZXJpdCBuaWJoIG1vbGVzdGllIHZvbHV0cGF0LiBTdXNwZW5kaXNzZSBwb3J0dGl0b3IgdHVycGlzIGZpbmlidXMgZXJvcyBvcm5hcmUgdGVtcG9yLiBDdXJhYml0dXIgbmVjIGR1aSBkYXBpYnVzLCBoZW5kcmVyaXQgbGlndWxhIGEsIGVsZWlmZW5kIGR1aS4gRXRpYW0gdml0YWUgZWxlbWVudHVtIG5pc2wuIEZ1c2NlIGNvbmd1ZSBsdWN0dXMgYWNjdW1zYW4uDQoNCk51bmMgbWV0dXMgYXJjdSwgdWxsYW1jb3JwZXIgYXQgZXggZWdldCwgdml2ZXJyYSBhdWN0b3Igb2Rpby4gTnVsbGEgcG9ydGEgc2VkIG1hdXJpcyB2ZWwgcG9ydHRpdG9yLiBFdGlhbSBsdWN0dXMgbGVvIHF1aXMgc2FnaXR0aXMgZmFjaWxpc2lzLiBQZWxsZW50ZXNxdWUgYWNjdW1zYW4gaW4gb2RpbyBub24gcGxhY2VyYXQuIEluIGV0IGFjY3Vtc2FuIG5pc2kuIEFsaXF1YW0gYWMgdG9ydG9yIG1hdHRpcywgcGVsbGVudGVzcXVlIHJpc3VzIHNpdCBhbWV0LCB1bHRyaWNpZXMgbGFjdXMuIE51bmMgaW50ZXJkdW0gZWxpdCB2ZWwgbGliZXJvIGlhY3VsaXMgYWNjdW1zYW4uIFV0IHNpdCBhbWV0IGNvbW1vZG8gZWxpdCwgaW50ZXJkdW0gdm9sdXRwYXQgb3JjaS4gSW4gbHVjdHVzIG5pc2kgcXVhbSwgdmVsIHNhZ2l0dGlzIGxpYmVybyBzdXNjaXBpdCBhLiBOYW0gcHVsdmluYXIsIG51bmMgYWMgZWxlbWVudHVtIHJ1dHJ1bSwgbGVjdHVzIGxlbyBmYWNpbGlzaXMgZXJvcywgbm9uIHBvcnRhIGxpYmVybyBudW5jIHF1aXMgcmlzdXMuDQoNCkludGVnZXIgYXQgbGliZXJvIGZldWdpYXQsIHB1bHZpbmFyIHZlbGl0IGltcGVyZGlldCwgaW50ZXJkdW0gZG9sb3IuIFByYWVzZW50IHNpdCBhbWV0IHVybmEgdmVsaXQuIFN1c3BlbmRpc3NlIG5lYyB0ZW1wb3IgaXBzdW0sIHZpdGFlIHBsYWNlcmF0IGxlby4gUGhhc2VsbHVzIHNvbGxpY2l0dWRpbiB2ZXN0aWJ1bHVtIHNvZGFsZXMuIERvbmVjIGNvbmd1ZSBsdWN0dXMgc2NlbGVyaXNxdWUuIER1aXMgdmVzdGlidWx1bSB1cm5hIHZlbCBkaWFtIGN1cnN1cywgZWdldCB1bHRyaWNpZXMgc2FwaWVuIGVsZWlmZW5kLiBVdCBtYWxlc3VhZGEgbWF1cmlzIG51bGxhLCBldCB2aXZlcnJhIG51bmMgc29kYWxlcyBldC4gVmVzdGlidWx1bSBub24gcG9ydHRpdG9yIG5pYmguDQoNCkluIHZpdGFlIHNvbGxpY2l0dWRpbiBhbnRlLiBJbnRlZ2VyIGF0IG1hZ25hIGxhY2luaWEsIG1vbGxpcyB2ZWxpdCBhdCwgZmVybWVudHVtIG1ldHVzLiBFdGlhbSBhYyB0dXJwaXMgYmliZW5kdW0sIHJob25jdXMgcHVydXMgZXQsIHRlbXBvciBlc3QuIEFsaXF1YW0gdGluY2lkdW50IGV0IGRvbG9yIGV0IHVsbGFtZWdlc3RhcyBmZWxpcyBpYWN1bGlzLiBGdXNjZSBxdWlzIG5pc2kgdGVtcHVzLCBwZWxsZW50ZXNxdWUgZGlhbSB1dCwgbWF4aW11cyBleC4gTWFlY2VuYXMgc2VkIGRpY3R1bSBuZXF1ZS4gQWxpcXVhbSBwb3J0dGl0b3IgdmVsIGRpYW0gc2VkIHNhZ2l0dGlzLiBNYWVjZW5hcyBzb2xsaWNpdHVkaW4gY29uZ3VlIHZlbmVuYXRpcy4gSW4gdGVsbHVzIG1pLCBmZXJtZW50dW0gdXQgcG9ydHRpdG9yIG5lYywgbGFvcmVldCBuZWMgc2FwaWVuLiBTdXNwZW5kaXNzZSBwb3RlbnRpLiBOYW0gdnVscHV0YXRlIHZ1bHB1dGF0ZSBsb3JlbSwgdXQgc29kYWxlcyBvcmNpIGZldWdpYXQgdml0YWUuDQoNClZpdmFtdXMgZXUgcGhhcmV0cmEgbGVvLiBNYXVyaXMgdml0YWUgY29uZ3VlIHZlbGl0LCBub24gYXVjdG9yIHR1cnBpcy4gU2VkIHVsbGFtY29ycGVyIGRvbG9yIG5lYyBlZmZpY2l0dXIgYWxpcXVldC4gTnVsbGEgdml0YWUgZmVsaXMgY29uc2VjdGV0dXIsIHJ1dHJ1bSB0b3J0b3IgZXUsIGVnZXN0YXMgbWV0dXMuIEV0aWFtIHZpdmVycmEsIGVsaXQgZXQgY3Vyc3VzIGRpZ25pc3NpbSwgbG9yZW0gZWxpdCBsYWNpbmlhIGVuaW0sIHZpdGFlIGFsaXF1ZXQgZXggZXJvcyB1dCBuZXF1ZS4gQWxpcXVhbSB2aXRhZSBpcHN1bSBzaXQgYW1ldCBudW5jIGVmZmljaXR1ciB0ZW1wdXMgdXQgbm9uIGRvbG9yLiBTZWQgbm9uIHRlbGx1cyBwb3J0YSwgbG9ib3J0aXMgbWV0dXMgaWQsIGRpZ25pc3NpbSBwdXJ1cy4gQ3VyYWJpdHVyIGF0IGxlY3R1cyBhY2N1bXNhbiwgbW9sZXN0aWUgZW5pbSBzZWQsIHRyaXN0aXF1ZSB2ZWxpdC4gQ3JhcyB2ZW5lbmF0aXMgZHVpIGEgcGVsbGVudGVzcXVlIHRpbmNpZHVudC4gQWVuZWFuIHJob25jdXMgaW4gZmVsaXMgc2l0IGFtZXQgdmVoaWN1bGEuDQoNCkFsaXF1YW0gYWNjdW1zYW4gbmVxdWUgbm9uIG1hZ25hIGdyYXZpZGEgdGluY2lkdW50LiBNYXVyaXMgYWNjdW1zYW4gcmlzdXMgc2VkIHVybmEgdml2ZXJyYSBwb3J0YS4gUGhhc2VsbHVzIHVsbGFtY29ycGVyIGVsZW1lbnR1bSBkdWksIG5vbiBtb2xlc3RpZSBzYXBpZW4gYWxpcXVhbSBub24uIFBlbGxlbnRlc3F1ZSBzdXNjaXBpdCBpbiBtYWduYSBsb2JvcnRpcyBhdWN0b3IuIFF1aXNxdWUgbm9uIGF1Y3RvciBsaWJlcm8uIFNlZCBhYyBibGFuZGl0IGVyYXQsIGFjIG1hbGVzdWFkYSBudW5jLiBNYWVjZW5hcyBwdWx2aW5hciBudW5jYXVyaXMgZmF1Y2lidXMgb3JuYXJlIHNlbSwgc2VkIHNhZ2l0dGlzIHB1cnVzIHB1bHZpbmFyIHZlbC4gUHJvaW4gY29uc2VjdGV0dXIgdmFyaXVzIGFudGUgYWMgYmliZW5kdW0uIFNlZCBzaXQgYW1ldCB1bHRyaWNlcyBwdXJ1cy4gUXVpc3F1ZSB0aW5jaWR1bnQgbG9yZW0gYXQgbnVuYyB2ZWhpY3VsYSBmaW5pYnVzLiBQcm9pbiBhYyBudW5jIGFjIHZlbGl0IGxhb3JlZXQgdWxsYW1jb3JwZXIgZnJpbmdpbGxhIGFjIHF1YW0uIE1vcmJpIGF1Y3RvciBsaWd1bGEgZWdldCBqdXN0byBpYWN1bGlzLCBzaXQgYW1ldCBhbGlxdWV0%UUU#EOFkirim1.txt